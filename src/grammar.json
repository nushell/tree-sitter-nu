{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "nu",
  "word": "identifier",
  "rules": {
    "nu_script": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "shebang"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_block_body"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "shebang": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "STRING",
          "value": "#!"
        },
        {
          "type": "PATTERN",
          "value": ".*\\r?\\n?"
        }
      ]
    },
    "_block_body_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_declaration"
        },
        {
          "type": "SYMBOL",
          "name": "_statement"
        }
      ]
    },
    "_declaration": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "decl_alias"
        },
        {
          "type": "SYMBOL",
          "name": "decl_def"
        },
        {
          "type": "SYMBOL",
          "name": "decl_export"
        },
        {
          "type": "SYMBOL",
          "name": "decl_extern"
        },
        {
          "type": "SYMBOL",
          "name": "decl_module"
        },
        {
          "type": "SYMBOL",
          "name": "decl_use"
        }
      ]
    },
    "decl_alias": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "export"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "alias"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "_command_name"
          }
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "SYMBOL",
            "name": "pipeline"
          }
        }
      ]
    },
    "stmt_let": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "let"
              },
              {
                "type": "STRING",
                "value": "let-env"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "_assignment_pattern"
          }
        ]
      }
    },
    "stmt_mut": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "mut"
          },
          {
            "type": "SYMBOL",
            "name": "_assignment_pattern"
          }
        ]
      }
    },
    "stmt_const": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "export"
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "STRING",
            "value": "const"
          },
          {
            "type": "SYMBOL",
            "name": "_assignment_pattern"
          }
        ]
      }
    },
    "assignment": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SYMBOL",
        "name": "_mutable_assignment_pattern"
      }
    },
    "_assignment_pattern": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "_variable_name"
          }
        },
        {
          "type": "FIELD",
          "name": "type",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "param_type"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "SYMBOL",
            "name": "pipeline"
          }
        }
      ]
    },
    "_mutable_assignment_pattern": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "lhs",
          "content": {
            "type": "SYMBOL",
            "name": "val_variable"
          }
        },
        {
          "type": "FIELD",
          "name": "opr",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "="
              },
              {
                "type": "STRING",
                "value": "+="
              },
              {
                "type": "STRING",
                "value": "-="
              },
              {
                "type": "STRING",
                "value": "*="
              },
              {
                "type": "STRING",
                "value": "/="
              },
              {
                "type": "STRING",
                "value": "++="
              }
            ]
          }
        },
        {
          "type": "FIELD",
          "name": "rhs",
          "content": {
            "type": "SYMBOL",
            "name": "pipeline"
          }
        }
      ]
    },
    "_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_ctrl_statement"
        },
        {
          "type": "SYMBOL",
          "name": "_stmt_hide"
        },
        {
          "type": "SYMBOL",
          "name": "_stmt_overlay"
        },
        {
          "type": "SYMBOL",
          "name": "stmt_register"
        },
        {
          "type": "SYMBOL",
          "name": "stmt_source"
        },
        {
          "type": "SYMBOL",
          "name": "assignment"
        },
        {
          "type": "SYMBOL",
          "name": "stmt_let"
        },
        {
          "type": "SYMBOL",
          "name": "stmt_mut"
        },
        {
          "type": "SYMBOL",
          "name": "stmt_const"
        },
        {
          "type": "SYMBOL",
          "name": "pipeline"
        }
      ]
    },
    "pipeline": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "pipe_element"
              },
              {
                "type": "SYMBOL",
                "name": "_pipe_separator"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_newline"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "pipe_element"
        }
      ]
    },
    "_block_body_statement_parenthesized": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_declaration_parenthesized"
        },
        {
          "type": "SYMBOL",
          "name": "_statement_parenthesized"
        }
      ]
    },
    "_declaration_parenthesized": {
      "type": "CHOICE",
      "members": [
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "decl_alias_parenthesized"
          },
          "named": true,
          "value": "decl_alias"
        },
        {
          "type": "SYMBOL",
          "name": "decl_def"
        },
        {
          "type": "SYMBOL",
          "name": "decl_export"
        },
        {
          "type": "SYMBOL",
          "name": "decl_extern"
        },
        {
          "type": "SYMBOL",
          "name": "decl_module"
        },
        {
          "type": "SYMBOL",
          "name": "decl_use"
        }
      ]
    },
    "decl_alias_parenthesized": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "export"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "alias"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "_command_name"
          }
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "SYMBOL",
              "name": "pipeline_parenthesized"
            },
            "named": true,
            "value": "pipeline"
          }
        }
      ]
    },
    "stmt_let_parenthesized": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "let"
              },
              {
                "type": "STRING",
                "value": "let-env"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "_assignment_pattern_parenthesized"
          }
        ]
      }
    },
    "stmt_mut_parenthesized": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "mut"
          },
          {
            "type": "SYMBOL",
            "name": "_assignment_pattern_parenthesized"
          }
        ]
      }
    },
    "stmt_const_parenthesized": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "export"
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "STRING",
            "value": "const"
          },
          {
            "type": "SYMBOL",
            "name": "_assignment_pattern_parenthesized"
          }
        ]
      }
    },
    "assignment_parenthesized": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SYMBOL",
        "name": "_mutable_assignment_pattern_parenthesized"
      }
    },
    "_assignment_pattern_parenthesized": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "_variable_name"
          }
        },
        {
          "type": "FIELD",
          "name": "type",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "param_type"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "SYMBOL",
              "name": "pipeline_parenthesized"
            },
            "named": true,
            "value": "pipeline"
          }
        }
      ]
    },
    "_mutable_assignment_pattern_parenthesized": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "lhs",
          "content": {
            "type": "SYMBOL",
            "name": "val_variable"
          }
        },
        {
          "type": "FIELD",
          "name": "opr",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "="
              },
              {
                "type": "STRING",
                "value": "+="
              },
              {
                "type": "STRING",
                "value": "-="
              },
              {
                "type": "STRING",
                "value": "*="
              },
              {
                "type": "STRING",
                "value": "/="
              },
              {
                "type": "STRING",
                "value": "++="
              }
            ]
          }
        },
        {
          "type": "FIELD",
          "name": "rhs",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "SYMBOL",
              "name": "pipeline_parenthesized"
            },
            "named": true,
            "value": "pipeline"
          }
        }
      ]
    },
    "_statement_parenthesized": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_ctrl_statement"
        },
        {
          "type": "SYMBOL",
          "name": "_stmt_hide"
        },
        {
          "type": "SYMBOL",
          "name": "_stmt_overlay"
        },
        {
          "type": "SYMBOL",
          "name": "stmt_register"
        },
        {
          "type": "SYMBOL",
          "name": "stmt_source"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "assignment_parenthesized"
          },
          "named": true,
          "value": "assignment"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "stmt_let_parenthesized"
          },
          "named": true,
          "value": "stmt_let"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "stmt_mut_parenthesized"
          },
          "named": true,
          "value": "stmt_mut"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "stmt_const_parenthesized"
          },
          "named": true,
          "value": "stmt_const"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "pipeline_parenthesized"
          },
          "named": true,
          "value": "pipeline"
        }
      ]
    },
    "pipeline_parenthesized": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "ALIAS",
                "content": {
                  "type": "SYMBOL",
                  "name": "pipe_element_parenthesized"
                },
                "named": true,
                "value": "pipe_element"
              },
              {
                "type": "SYMBOL",
                "name": "_pipe_separator"
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "pipe_element_parenthesized"
          },
          "named": true,
          "value": "pipe_element"
        }
      ]
    },
    "_block_body": {
      "type": "CHOICE",
      "members": [
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "_terminator"
          }
        },
        {
          "type": "PREC",
          "value": 20,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_terminator"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_block_body_statement"
                    },
                    {
                      "type": "REPEAT1",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_terminator"
                      }
                    }
                  ]
                }
              },
              {
                "type": "SYMBOL",
                "name": "_block_body_statement"
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_terminator"
                }
              }
            ]
          }
        }
      ]
    },
    "cmd_identifier": {
      "type": "CHOICE",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "PREC",
            "value": -1,
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':^#$\\-]"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "PATTERN",
                    "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                  }
                }
              ]
            }
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "def"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "alias"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "use"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "export-env"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "extern"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "module"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "let"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "let-env"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "mut"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "const"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "hide"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "hide-env"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "source"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "source-env"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "overlay"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "register"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "for"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "loop"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "while"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "error"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "do"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "if"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "else"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "try"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "catch"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "match"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "break"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "continue"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "return"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "as"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "in"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "make"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "export"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "true"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "false"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "null"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "PATTERN",
                "value": "[iI][nN][fF]([iI][nN][iI][tT][yY])?"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "PATTERN",
                "value": "-[iI][nN][fF]([iI][nN][iI][tT][yY])?"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "PATTERN",
                "value": "[nN][aA][nN]"
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                }
              }
            ]
          }
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_val_number_decimal"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "duration_unit"
                      },
                      "named": false,
                      "value": "_unit"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "filesize_unit"
                      },
                      "named": false,
                      "value": "_unit"
                    }
                  ]
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "**"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "++"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "*"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "/"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "mod"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "//"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "+"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "-"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "bit-shl"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "bit-shr"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "=~"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "!~"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "bit-and"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "bit-xor"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "bit-or"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "and"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "xor"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "or"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "in"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "not-in"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "starts-with"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "ends-with"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "=="
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "!="
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "<"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "<="
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": ">"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": ">="
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "=~"
                      }
                    },
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "STRING",
                        "value": "!~"
                      }
                    }
                  ]
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "IMMEDIATE_TOKEN",
              "content": {
                "type": "PREC",
                "value": -1,
                "content": {
                  "type": "REPEAT",
                  "content": {
                    "type": "PATTERN",
                    "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\{}<>=\"`':]"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    "identifier": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "PATTERN",
            "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\-{}<>=\"`'@?,:.&*!^+#$]"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "PATTERN",
              "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\-{}<>=\"`'@?,:.]"
            }
          }
        ]
      }
    },
    "long_flag_identifier": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[0-9\\p{XID_Start}_][\\p{XID_Continue}?_-]*"
      }
    },
    "_command_name": {
      "type": "CHOICE",
      "members": [
        {
          "type": "FIELD",
          "name": "unquoted_name",
          "content": {
            "type": "SYMBOL",
            "name": "cmd_identifier"
          }
        },
        {
          "type": "FIELD",
          "name": "quoted_name",
          "content": {
            "type": "SYMBOL",
            "name": "val_string"
          }
        }
      ]
    },
    "_variable_name": {
      "type": "CHOICE",
      "members": [
        {
          "type": "FIELD",
          "name": "var_name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "FIELD",
          "name": "dollar_name",
          "content": {
            "type": "SYMBOL",
            "name": "val_variable"
          }
        }
      ]
    },
    "_newline": {
      "type": "PATTERN",
      "value": "\\r?\\n"
    },
    "_space": {
      "type": "PATTERN",
      "value": "[ \\t]+"
    },
    "_separator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_space"
        },
        {
          "type": "SYMBOL",
          "name": "_newline"
        }
      ]
    },
    "_terminator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": ";"
        },
        {
          "type": "SYMBOL",
          "name": "_newline"
        }
      ]
    },
    "_pipe_separator": {
      "type": "REPEAT1",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "_newline"
            }
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "|"
              },
              {
                "type": "STRING",
                "value": "err>|"
              },
              {
                "type": "STRING",
                "value": "out>|"
              },
              {
                "type": "STRING",
                "value": "e>|"
              },
              {
                "type": "STRING",
                "value": "o>|"
              },
              {
                "type": "STRING",
                "value": "err+out>|"
              },
              {
                "type": "STRING",
                "value": "out+err>|"
              },
              {
                "type": "STRING",
                "value": "o+e>|"
              },
              {
                "type": "STRING",
                "value": "e+o>|"
              }
            ]
          }
        ]
      }
    },
    "decl_def": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "export"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "def"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "long_flag"
          }
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "_command_name"
          }
        },
        {
          "type": "FIELD",
          "name": "parameters",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "parameter_parens"
              },
              {
                "type": "SYMBOL",
                "name": "parameter_bracks"
              }
            ]
          }
        },
        {
          "type": "FIELD",
          "name": "return_type",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "returns"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        },
        {
          "type": "FIELD",
          "name": "body",
          "content": {
            "type": "SYMBOL",
            "name": "block"
          }
        }
      ]
    },
    "decl_export": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "export-env"
        },
        {
          "type": "FIELD",
          "name": "body",
          "content": {
            "type": "SYMBOL",
            "name": "block"
          }
        }
      ]
    },
    "decl_extern": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "export"
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "STRING",
            "value": "extern"
          },
          {
            "type": "FIELD",
            "name": "name",
            "content": {
              "type": "SYMBOL",
              "name": "_command_name"
            }
          },
          {
            "type": "FIELD",
            "name": "signature",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "parameter_parens"
                },
                {
                  "type": "SYMBOL",
                  "name": "parameter_bracks"
                }
              ]
            }
          },
          {
            "type": "FIELD",
            "name": "body",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "block"
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          }
        ]
      }
    },
    "decl_module": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "export"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "module"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "_command_name"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "FIELD",
              "name": "body",
              "content": {
                "type": "SYMBOL",
                "name": "block"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "decl_use": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "export"
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "STRING",
            "value": "use"
          },
          {
            "type": "FIELD",
            "name": "module",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "unquoted"
                },
                {
                  "type": "SYMBOL",
                  "name": "_stringish"
                }
              ]
            }
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "FIELD",
                "name": "import_pattern",
                "content": {
                  "type": "SYMBOL",
                  "name": "scope_pattern"
                }
              },
              {
                "type": "BLANK"
              }
            ]
          }
        ]
      }
    },
    "returns": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": ":"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_multiple_types"
            },
            {
              "type": "SYMBOL",
              "name": "_one_type"
            }
          ]
        }
      ]
    },
    "_one_type": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_type_annotation"
        },
        {
          "type": "STRING",
          "value": "->"
        },
        {
          "type": "SYMBOL",
          "name": "_type_annotation"
        }
      ]
    },
    "_multiple_types": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "PREC",
              "value": 20,
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_newline"
                    }
                  },
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "SEQ",
                      "members": [
                        {
                          "type": "SYMBOL",
                          "name": "_one_type"
                        },
                        {
                          "type": "REPEAT1",
                          "content": {
                            "type": "SYMBOL",
                            "name": "_entry_separator"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "SYMBOL",
                    "name": "_one_type"
                  },
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_entry_separator"
                    }
                  }
                ]
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "parameter_parens": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "parameter"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "parameter_bracks": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "parameter"
          }
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "parameter_pipes": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "|"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "parameter"
          }
        },
        {
          "type": "STRING",
          "value": "|"
        }
      ]
    },
    "parameter": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_param_name"
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "FIELD",
                  "name": "param_long_flag",
                  "content": {
                    "type": "SYMBOL",
                    "name": "param_long_flag"
                  }
                },
                {
                  "type": "FIELD",
                  "name": "flag_capsule",
                  "content": {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "SYMBOL",
                        "name": "flag_capsule"
                      },
                      {
                        "type": "BLANK"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "param_type"
              },
              {
                "type": "SYMBOL",
                "name": "param_value"
              }
            ]
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_newline"
              },
              {
                "type": "STRING",
                "value": ","
              }
            ]
          }
        }
      ]
    },
    "_param_name": {
      "type": "CHOICE",
      "members": [
        {
          "type": "FIELD",
          "name": "param_rest",
          "content": {
            "type": "SYMBOL",
            "name": "param_rest"
          }
        },
        {
          "type": "FIELD",
          "name": "param_optional",
          "content": {
            "type": "SYMBOL",
            "name": "param_opt"
          }
        },
        {
          "type": "FIELD",
          "name": "param_name",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "$"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        },
        {
          "type": "FIELD",
          "name": "param_short_flag",
          "content": {
            "type": "SYMBOL",
            "name": "param_short_flag"
          }
        }
      ]
    },
    "param_type": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_type_annotation"
        },
        {
          "type": "FIELD",
          "name": "completion",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "param_cmd"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        }
      ]
    },
    "param_value": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "FIELD",
          "name": "param_value",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_item_expression"
              },
              {
                "type": "ALIAS",
                "content": {
                  "type": "SYMBOL",
                  "name": "_unquoted_in_record"
                },
                "named": true,
                "value": "val_string"
              },
              {
                "type": "ALIAS",
                "content": {
                  "type": "SYMBOL",
                  "name": "_unquoted_in_record_with_expr"
                },
                "named": true,
                "value": "val_string"
              }
            ]
          }
        }
      ]
    },
    "_type_annotation": {
      "type": "FIELD",
      "name": "type",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "list_type"
          },
          {
            "type": "SYMBOL",
            "name": "collection_type"
          },
          {
            "type": "SYMBOL",
            "name": "flat_type"
          }
        ]
      }
    },
    "_all_type": {
      "type": "FIELD",
      "name": "type",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "list_type"
          },
          {
            "type": "SYMBOL",
            "name": "collection_type"
          },
          {
            "type": "SYMBOL",
            "name": "flat_type"
          }
        ]
      }
    },
    "flat_type": {
      "type": "FIELD",
      "name": "flat_type",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "any"
          },
          {
            "type": "STRING",
            "value": "binary"
          },
          {
            "type": "STRING",
            "value": "block"
          },
          {
            "type": "STRING",
            "value": "bool"
          },
          {
            "type": "STRING",
            "value": "cell-path"
          },
          {
            "type": "STRING",
            "value": "closure"
          },
          {
            "type": "STRING",
            "value": "cond"
          },
          {
            "type": "STRING",
            "value": "datetime"
          },
          {
            "type": "STRING",
            "value": "directory"
          },
          {
            "type": "STRING",
            "value": "duration"
          },
          {
            "type": "STRING",
            "value": "directory"
          },
          {
            "type": "STRING",
            "value": "duration"
          },
          {
            "type": "STRING",
            "value": "error"
          },
          {
            "type": "STRING",
            "value": "expr"
          },
          {
            "type": "STRING",
            "value": "float"
          },
          {
            "type": "STRING",
            "value": "decimal"
          },
          {
            "type": "STRING",
            "value": "filesize"
          },
          {
            "type": "STRING",
            "value": "full-cell-path"
          },
          {
            "type": "STRING",
            "value": "glob"
          },
          {
            "type": "STRING",
            "value": "int"
          },
          {
            "type": "STRING",
            "value": "import-pattern"
          },
          {
            "type": "STRING",
            "value": "keyword"
          },
          {
            "type": "STRING",
            "value": "math"
          },
          {
            "type": "STRING",
            "value": "nothing"
          },
          {
            "type": "STRING",
            "value": "number"
          },
          {
            "type": "STRING",
            "value": "one-of"
          },
          {
            "type": "STRING",
            "value": "operator"
          },
          {
            "type": "STRING",
            "value": "path"
          },
          {
            "type": "STRING",
            "value": "range"
          },
          {
            "type": "STRING",
            "value": "signature"
          },
          {
            "type": "STRING",
            "value": "string"
          },
          {
            "type": "STRING",
            "value": "table"
          },
          {
            "type": "STRING",
            "value": "variable"
          },
          {
            "type": "STRING",
            "value": "var-with-opt-type"
          },
          {
            "type": "STRING",
            "value": "record"
          },
          {
            "type": "STRING",
            "value": "list"
          }
        ]
      }
    },
    "collection_type": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "record"
            },
            {
              "type": "STRING",
              "value": "table"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "IMMEDIATE_TOKEN",
              "content": {
                "type": "STRING",
                "value": "<"
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "PREC",
                  "value": 20,
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "REPEAT",
                        "content": {
                          "type": "SYMBOL",
                          "name": "_newline"
                        }
                      },
                      {
                        "type": "REPEAT",
                        "content": {
                          "type": "SEQ",
                          "members": [
                            {
                              "type": "SEQ",
                              "members": [
                                {
                                  "type": "FIELD",
                                  "name": "key",
                                  "content": {
                                    "type": "CHOICE",
                                    "members": [
                                      {
                                        "type": "SYMBOL",
                                        "name": "identifier"
                                      },
                                      {
                                        "type": "ALIAS",
                                        "content": {
                                          "type": "SYMBOL",
                                          "name": "val_string"
                                        },
                                        "named": true,
                                        "value": "identifier"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "CHOICE",
                                  "members": [
                                    {
                                      "type": "SEQ",
                                      "members": [
                                        {
                                          "type": "STRING",
                                          "value": ":"
                                        },
                                        {
                                          "type": "SYMBOL",
                                          "name": "_all_type"
                                        },
                                        {
                                          "type": "FIELD",
                                          "name": "completion",
                                          "content": {
                                            "type": "CHOICE",
                                            "members": [
                                              {
                                                "type": "SYMBOL",
                                                "name": "param_cmd"
                                              },
                                              {
                                                "type": "BLANK"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BLANK"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "REPEAT1",
                              "content": {
                                "type": "SYMBOL",
                                "name": "_entry_separator"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "SEQ",
                        "members": [
                          {
                            "type": "FIELD",
                            "name": "key",
                            "content": {
                              "type": "CHOICE",
                              "members": [
                                {
                                  "type": "SYMBOL",
                                  "name": "identifier"
                                },
                                {
                                  "type": "ALIAS",
                                  "content": {
                                    "type": "SYMBOL",
                                    "name": "val_string"
                                  },
                                  "named": true,
                                  "value": "identifier"
                                }
                              ]
                            }
                          },
                          {
                            "type": "CHOICE",
                            "members": [
                              {
                                "type": "SEQ",
                                "members": [
                                  {
                                    "type": "STRING",
                                    "value": ":"
                                  },
                                  {
                                    "type": "SYMBOL",
                                    "name": "_all_type"
                                  },
                                  {
                                    "type": "FIELD",
                                    "name": "completion",
                                    "content": {
                                      "type": "CHOICE",
                                      "members": [
                                        {
                                          "type": "SYMBOL",
                                          "name": "param_cmd"
                                        },
                                        {
                                          "type": "BLANK"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "BLANK"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "REPEAT",
                        "content": {
                          "type": "SYMBOL",
                          "name": "_entry_separator"
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "STRING",
              "value": ">"
            }
          ]
        }
      ]
    },
    "list_type": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "list"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "IMMEDIATE_TOKEN",
              "content": {
                "type": "STRING",
                "value": "<"
              }
            },
            {
              "type": "FIELD",
              "name": "inner",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_all_type"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            },
            {
              "type": "FIELD",
              "name": "completion",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "param_cmd"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            },
            {
              "type": "STRING",
              "value": ">"
            }
          ]
        }
      ]
    },
    "param_cmd": {
      "type": "SEQ",
      "members": [
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": "@"
          }
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "_command_name"
          }
        }
      ]
    },
    "param_rest": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "..."
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "$"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        }
      ]
    },
    "param_opt": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": "?"
          }
        }
      ]
    },
    "param_long_flag": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "--"
        },
        {
          "type": "SYMBOL",
          "name": "long_flag_identifier"
        }
      ]
    },
    "flag_capsule": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "param_short_flag"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "param_short_flag": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "param_short_flag_identifier"
          }
        }
      ]
    },
    "param_short_flag_identifier": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[\\p{Punctuation}\\p{Symbol}\\p{XID_Continue}]"
      }
    },
    "_control": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_ctrl_statement"
          },
          {
            "type": "SYMBOL",
            "name": "_ctrl_expression"
          }
        ]
      }
    },
    "_ctrl_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "ctrl_for"
        },
        {
          "type": "SYMBOL",
          "name": "ctrl_loop"
        },
        {
          "type": "SYMBOL",
          "name": "ctrl_while"
        },
        {
          "type": "SYMBOL",
          "name": "ctrl_error"
        }
      ]
    },
    "_ctrl_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "FIELD",
          "name": "ctrl_break",
          "content": {
            "type": "STRING",
            "value": "break"
          }
        },
        {
          "type": "FIELD",
          "name": "ctrl_continue",
          "content": {
            "type": "STRING",
            "value": "continue"
          }
        },
        {
          "type": "SYMBOL",
          "name": "ctrl_do"
        },
        {
          "type": "SYMBOL",
          "name": "ctrl_if"
        },
        {
          "type": "SYMBOL",
          "name": "ctrl_try"
        },
        {
          "type": "SYMBOL",
          "name": "ctrl_match"
        },
        {
          "type": "SYMBOL",
          "name": "ctrl_return"
        }
      ]
    },
    "_ctrl_expression_parenthesized": {
      "type": "CHOICE",
      "members": [
        {
          "type": "FIELD",
          "name": "ctrl_break",
          "content": {
            "type": "STRING",
            "value": "break"
          }
        },
        {
          "type": "FIELD",
          "name": "ctrl_continue",
          "content": {
            "type": "STRING",
            "value": "continue"
          }
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "ctrl_do_parenthesized"
          },
          "named": true,
          "value": "ctrl_do"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "ctrl_if_parenthesized"
          },
          "named": true,
          "value": "ctrl_if"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "ctrl_try_parenthesized"
          },
          "named": true,
          "value": "ctrl_try"
        },
        {
          "type": "SYMBOL",
          "name": "ctrl_match"
        },
        {
          "type": "SYMBOL",
          "name": "ctrl_return"
        }
      ]
    },
    "ctrl_for": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "for"
        },
        {
          "type": "FIELD",
          "name": "looping_var",
          "content": {
            "type": "SYMBOL",
            "name": "_variable_name"
          }
        },
        {
          "type": "STRING",
          "value": "in"
        },
        {
          "type": "FIELD",
          "name": "iterable",
          "content": {
            "type": "SYMBOL",
            "name": "_expression"
          }
        },
        {
          "type": "FIELD",
          "name": "body",
          "content": {
            "type": "SYMBOL",
            "name": "block"
          }
        }
      ]
    },
    "ctrl_loop": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "loop"
        },
        {
          "type": "FIELD",
          "name": "body",
          "content": {
            "type": "SYMBOL",
            "name": "block"
          }
        }
      ]
    },
    "ctrl_error": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "error"
        },
        {
          "type": "STRING",
          "value": "make"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_flag"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "FIELD",
          "name": "error_record",
          "content": {
            "type": "SYMBOL",
            "name": "val_record"
          }
        }
      ]
    },
    "ctrl_while": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "while"
        },
        {
          "type": "FIELD",
          "name": "condition",
          "content": {
            "type": "SYMBOL",
            "name": "_expression"
          }
        },
        {
          "type": "FIELD",
          "name": "body",
          "content": {
            "type": "SYMBOL",
            "name": "block"
          }
        }
      ]
    },
    "_do_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_item_expression"
        },
        {
          "type": "SYMBOL",
          "name": "_flag"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "unquoted"
          },
          "named": true,
          "value": "val_string"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "_unquoted_with_expr"
          },
          "named": true,
          "value": "val_string"
        }
      ]
    },
    "ctrl_do": {
      "type": "PREC_LEFT",
      "value": -1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "do"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "_flag"
            }
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_blosure"
              },
              {
                "type": "SYMBOL",
                "name": "val_variable"
              }
            ]
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "_do_expression"
            }
          }
        ]
      }
    },
    "ctrl_do_parenthesized": {
      "type": "PREC_LEFT",
      "value": -1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "do"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "_flags_parenthesized"
            }
          },
          {
            "type": "REPEAT1",
            "content": {
              "type": "SYMBOL",
              "name": "_separator"
            }
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_blosure"
              },
              {
                "type": "SYMBOL",
                "name": "val_variable"
              }
            ]
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_newline"
                  }
                },
                {
                  "type": "SYMBOL",
                  "name": "_do_expression"
                }
              ]
            }
          }
        ]
      }
    },
    "ctrl_if": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "FIELD",
          "name": "condition",
          "content": {
            "type": "SYMBOL",
            "name": "_expression"
          }
        },
        {
          "type": "FIELD",
          "name": "then_branch",
          "content": {
            "type": "SYMBOL",
            "name": "block"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "else"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "FIELD",
                      "name": "else_block",
                      "content": {
                        "type": "CHOICE",
                        "members": [
                          {
                            "type": "SYMBOL",
                            "name": "block"
                          },
                          {
                            "type": "SYMBOL",
                            "name": "_expression"
                          },
                          {
                            "type": "SYMBOL",
                            "name": "command"
                          }
                        ]
                      }
                    },
                    {
                      "type": "FIELD",
                      "name": "else_branch",
                      "content": {
                        "type": "SYMBOL",
                        "name": "ctrl_if"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "ctrl_if_parenthesized": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "FIELD",
          "name": "condition",
          "content": {
            "type": "SYMBOL",
            "name": "_expression_parenthesized"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "FIELD",
          "name": "then_branch",
          "content": {
            "type": "SYMBOL",
            "name": "block"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_newline"
                  }
                },
                {
                  "type": "STRING",
                  "value": "else"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_newline"
                  }
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "FIELD",
                      "name": "else_block",
                      "content": {
                        "type": "CHOICE",
                        "members": [
                          {
                            "type": "SYMBOL",
                            "name": "block"
                          },
                          {
                            "type": "SYMBOL",
                            "name": "_expression_parenthesized"
                          },
                          {
                            "type": "SYMBOL",
                            "name": "command"
                          }
                        ]
                      }
                    },
                    {
                      "type": "FIELD",
                      "name": "else_branch",
                      "content": {
                        "type": "ALIAS",
                        "content": {
                          "type": "SYMBOL",
                          "name": "ctrl_if_parenthesized"
                        },
                        "named": true,
                        "value": "ctrl_if"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "ctrl_match": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "match"
        },
        {
          "type": "FIELD",
          "name": "scrutinee",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_item_expression"
              },
              {
                "type": "ALIAS",
                "content": {
                  "type": "SYMBOL",
                  "name": "unquoted"
                },
                "named": true,
                "value": "val_string"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "PREC",
              "value": 20,
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_newline"
                    }
                  },
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "SEQ",
                      "members": [
                        {
                          "type": "CHOICE",
                          "members": [
                            {
                              "type": "SYMBOL",
                              "name": "match_arm"
                            },
                            {
                              "type": "SYMBOL",
                              "name": "default_arm"
                            }
                          ]
                        },
                        {
                          "type": "REPEAT1",
                          "content": {
                            "type": "SYMBOL",
                            "name": "_entry_separator"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "SYMBOL",
                        "name": "match_arm"
                      },
                      {
                        "type": "SYMBOL",
                        "name": "default_arm"
                      }
                    ]
                  },
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_entry_separator"
                    }
                  }
                ]
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "match_arm": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "pattern",
          "content": {
            "type": "SYMBOL",
            "name": "match_pattern"
          }
        },
        {
          "type": "STRING",
          "value": "=>"
        },
        {
          "type": "FIELD",
          "name": "expression",
          "content": {
            "type": "SYMBOL",
            "name": "_match_expression"
          }
        }
      ]
    },
    "default_arm": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "default_pattern",
          "content": {
            "type": "STRING",
            "value": "_"
          }
        },
        {
          "type": "STRING",
          "value": "=>"
        },
        {
          "type": "FIELD",
          "name": "expression",
          "content": {
            "type": "SYMBOL",
            "name": "_match_expression"
          }
        }
      ]
    },
    "_match_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_item_expression"
        },
        {
          "type": "PREC_DYNAMIC",
          "value": 10,
          "content": {
            "type": "SYMBOL",
            "name": "block"
          }
        }
      ]
    },
    "match_pattern": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "_"
            },
            {
              "type": "SYMBOL",
              "name": "match_guard"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_match_pattern"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "match_guard"
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_match_pattern"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": "|"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "_match_pattern"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "_match_pattern": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_match_pattern_expression"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "unquoted"
          },
          "named": true,
          "value": "val_string"
        }
      ]
    },
    "match_guard": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "_match_pattern_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_match_pattern_value"
        },
        {
          "type": "SYMBOL",
          "name": "val_range"
        },
        {
          "type": "SYMBOL",
          "name": "expr_parenthesized"
        }
      ]
    },
    "_match_pattern_value": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "val_variable"
        },
        {
          "type": "SYMBOL",
          "name": "val_nothing"
        },
        {
          "type": "SYMBOL",
          "name": "val_bool"
        },
        {
          "type": "SYMBOL",
          "name": "val_number"
        },
        {
          "type": "SYMBOL",
          "name": "val_duration"
        },
        {
          "type": "SYMBOL",
          "name": "val_filesize"
        },
        {
          "type": "SYMBOL",
          "name": "val_binary"
        },
        {
          "type": "SYMBOL",
          "name": "val_string"
        },
        {
          "type": "SYMBOL",
          "name": "val_date"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "_match_pattern_list"
          },
          "named": true,
          "value": "val_list"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "_match_pattern_record"
          },
          "named": true,
          "value": "val_record"
        },
        {
          "type": "SYMBOL",
          "name": "val_table"
        }
      ]
    },
    "_match_pattern_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "FIELD",
            "name": "item",
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_match_pattern_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_in_list"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "STRING",
                      "value": ","
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "FIELD",
              "name": "rest",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_match_pattern_rest"
                    },
                    "named": true,
                    "value": "val_variable"
                  },
                  {
                    "type": "STRING",
                    "value": ".."
                  }
                ]
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "_match_pattern_rest": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ".."
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "IMMEDIATE_TOKEN",
              "content": {
                "type": "STRING",
                "value": "$"
              }
            },
            {
              "type": "SYMBOL",
              "name": "identifier"
            }
          ]
        }
      ]
    },
    "_match_pattern_record": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "FIELD",
            "name": "entry",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "record_entry"
                },
                {
                  "type": "SYMBOL",
                  "name": "_match_pattern_record_variable"
                }
              ]
            }
          }
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "cell_path"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_match_pattern_record_variable": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "val_variable"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": ","
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "ctrl_try": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "try"
        },
        {
          "type": "FIELD",
          "name": "try_branch",
          "content": {
            "type": "SYMBOL",
            "name": "block"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "catch"
                },
                {
                  "type": "FIELD",
                  "name": "catch_branch",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_blosure"
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "ctrl_try_parenthesized": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "try"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "FIELD",
          "name": "try_branch",
          "content": {
            "type": "SYMBOL",
            "name": "block"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_newline"
                  }
                },
                {
                  "type": "STRING",
                  "value": "catch"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_newline"
                  }
                },
                {
                  "type": "FIELD",
                  "name": "catch_branch",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_blosure"
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "ctrl_return": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC",
          "value": 1,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "return"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_expression"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "ctrl_do"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "ctrl_if"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "ctrl_try"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "ctrl_match"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "return"
        }
      ]
    },
    "pipe_element": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "env_var"
                  },
                  {
                    "type": "REPEAT1",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_space"
                    }
                  }
                ]
              }
            },
            {
              "type": "SYMBOL",
              "name": "_expression"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "redirection"
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "env_var"
                  },
                  {
                    "type": "REPEAT1",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_space"
                    }
                  }
                ]
              }
            },
            {
              "type": "SYMBOL",
              "name": "command"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_ctrl_expression"
        },
        {
          "type": "SYMBOL",
          "name": "where_command"
        }
      ]
    },
    "pipe_element_parenthesized": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "env_var"
                  },
                  {
                    "type": "REPEAT1",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_separator"
                    }
                  }
                ]
              }
            },
            {
              "type": "SYMBOL",
              "name": "_expression_parenthesized"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "redirection"
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "env_var"
                  },
                  {
                    "type": "REPEAT1",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_separator"
                    }
                  }
                ]
              }
            },
            {
              "type": "ALIAS",
              "content": {
                "type": "SYMBOL",
                "name": "_command_parenthesized"
              },
              "named": true,
              "value": "command"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_ctrl_expression_parenthesized"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "where_command_parenthesized"
          },
          "named": true,
          "value": "where_command"
        }
      ]
    },
    "stmt_source": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "source"
            },
            {
              "type": "STRING",
              "value": "source-env"
            }
          ]
        },
        {
          "type": "FIELD",
          "name": "file",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "ALIAS",
                "content": {
                  "type": "SYMBOL",
                  "name": "unquoted"
                },
                "named": true,
                "value": "val_string"
              },
              {
                "type": "SYMBOL",
                "name": "_stringish"
              }
            ]
          }
        }
      ]
    },
    "stmt_register": {
      "type": "PREC_LEFT",
      "value": -1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "register"
          },
          {
            "type": "FIELD",
            "name": "plugin",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "ALIAS",
                  "content": {
                    "type": "SYMBOL",
                    "name": "unquoted"
                  },
                  "named": true,
                  "value": "val_string"
                },
                {
                  "type": "SYMBOL",
                  "name": "val_variable"
                }
              ]
            }
          },
          {
            "type": "FIELD",
            "name": "signature",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "val_record"
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          }
        ]
      }
    },
    "_stmt_hide": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "hide_mod"
        },
        {
          "type": "SYMBOL",
          "name": "hide_env"
        }
      ]
    },
    "hide_mod": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "hide"
          },
          {
            "type": "FIELD",
            "name": "module",
            "content": {
              "type": "SYMBOL",
              "name": "_command_name"
            }
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "scope_pattern"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        ]
      }
    },
    "hide_env": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "hide-env"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_flag"
          }
        },
        {
          "type": "FIELD",
          "name": "variable",
          "content": {
            "type": "SYMBOL",
            "name": "_variable_name"
          }
        }
      ]
    },
    "_stmt_overlay": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "overlay_hide"
        },
        {
          "type": "SYMBOL",
          "name": "overlay_list"
        },
        {
          "type": "SYMBOL",
          "name": "overlay_new"
        },
        {
          "type": "SYMBOL",
          "name": "overlay_use"
        }
      ]
    },
    "overlay_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "overlay"
        },
        {
          "type": "STRING",
          "value": "list"
        }
      ]
    },
    "overlay_hide": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "overlay"
        },
        {
          "type": "STRING",
          "value": "hide"
        },
        {
          "type": "FIELD",
          "name": "overlay",
          "content": {
            "type": "SYMBOL",
            "name": "_command_name"
          }
        }
      ]
    },
    "overlay_new": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "overlay"
        },
        {
          "type": "STRING",
          "value": "new"
        },
        {
          "type": "SYMBOL",
          "name": "_command_name"
        }
      ]
    },
    "overlay_use": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "overlay"
        },
        {
          "type": "STRING",
          "value": "use"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_flag"
          }
        },
        {
          "type": "FIELD",
          "name": "overlay",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_flag"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "as"
                },
                {
                  "type": "FIELD",
                  "name": "rename",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_command_name"
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "scope_pattern": {
      "type": "CHOICE",
      "members": [
        {
          "type": "FIELD",
          "name": "wildcard",
          "content": {
            "type": "SYMBOL",
            "name": "wild_card"
          }
        },
        {
          "type": "FIELD",
          "name": "command",
          "content": {
            "type": "SYMBOL",
            "name": "_command_name"
          }
        },
        {
          "type": "FIELD",
          "name": "command_list",
          "content": {
            "type": "SYMBOL",
            "name": "command_list"
          }
        }
      ]
    },
    "wild_card": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "*"
      }
    },
    "command_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "PREC",
              "value": 20,
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_newline"
                    }
                  },
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "SEQ",
                      "members": [
                        {
                          "type": "FIELD",
                          "name": "cmd",
                          "content": {
                            "type": "SYMBOL",
                            "name": "_command_name"
                          }
                        },
                        {
                          "type": "REPEAT1",
                          "content": {
                            "type": "SYMBOL",
                            "name": "_entry_separator"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "FIELD",
                    "name": "cmd",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_command_name"
                    }
                  },
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_entry_separator"
                    }
                  }
                ]
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_block_body"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "_blosure": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_DYNAMIC",
          "value": 10,
          "content": {
            "type": "SYMBOL",
            "name": "block"
          }
        },
        {
          "type": "SYMBOL",
          "name": "val_closure"
        }
      ]
    },
    "_where_predicate_lhs": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "ALIAS",
              "content": {
                "type": "SYMBOL",
                "name": "identifier"
              },
              "named": true,
              "value": "val_string"
            },
            {
              "type": "SYMBOL",
              "name": "val_number"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "?"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "cell_path"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "where_command": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "where"
        },
        {
          "type": "FIELD",
          "name": "predicate",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_predicate"
              },
              {
                "type": "SYMBOL",
                "name": "val_closure"
              },
              {
                "type": "SYMBOL",
                "name": "_binary_predicate"
              }
            ]
          }
        }
      ]
    },
    "where_command_parenthesized": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "where"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "_newline"
            }
          },
          {
            "type": "FIELD",
            "name": "predicate",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_predicate"
                },
                {
                  "type": "SYMBOL",
                  "name": "val_closure"
                },
                {
                  "type": "SYMBOL",
                  "name": "_binary_predicate_parenthesized"
                }
              ]
            }
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "_newline"
            }
          }
        ]
      }
    },
    "_binary_predicate": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 4,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_predicate"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_binary_predicate"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "and"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_predicate"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_binary_predicate"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 3,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_predicate"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_binary_predicate"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "xor"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_predicate"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_binary_predicate"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 2,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_predicate"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_binary_predicate"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "or"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_predicate"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_binary_predicate"
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "_binary_predicate_parenthesized": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 4,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_predicate"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_binary_predicate_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "and"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_predicate"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_binary_predicate_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 3,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_predicate"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_binary_predicate_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "xor"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_predicate"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_binary_predicate_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 2,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_predicate"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_binary_predicate_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "or"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_predicate"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_binary_predicate_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        }
      ]
    },
    "_predicate": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "val_bool"
        },
        {
          "type": "SYMBOL",
          "name": "expr_unary"
        },
        {
          "type": "SYMBOL",
          "name": "expr_parenthesized"
        },
        {
          "type": "PREC_LEFT",
          "value": 9,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_where_predicate_lhs"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "in"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_value"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_range"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_unary"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 9,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_where_predicate_lhs"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "not-in"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_value"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_range"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_unary"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 9,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_where_predicate_lhs"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "starts-with"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_value"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_range"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_unary"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 9,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_where_predicate_lhs"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "ends-with"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_value"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_range"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_unary"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_where_predicate_lhs"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "=="
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_value"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_range"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_unary"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_where_predicate_lhs"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "!="
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_value"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_range"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_unary"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_where_predicate_lhs"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "<"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_value"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_range"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_unary"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_where_predicate_lhs"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "<="
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_value"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_range"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_unary"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_where_predicate_lhs"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": ">"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_value"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_range"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_unary"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_where_predicate_lhs"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": ">="
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_value"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_range"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_unary"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 8,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_where_predicate_lhs"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "=~"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_value"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_range"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_unary"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 8,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_where_predicate_lhs"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "!~"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_value"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_range"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_unary"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_value"
        },
        {
          "type": "SYMBOL",
          "name": "expr_binary"
        },
        {
          "type": "SYMBOL",
          "name": "expr_unary"
        },
        {
          "type": "SYMBOL",
          "name": "val_range"
        },
        {
          "type": "SYMBOL",
          "name": "expr_parenthesized"
        }
      ]
    },
    "_expression_parenthesized": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_value"
        },
        {
          "type": "SYMBOL",
          "name": "expr_unary"
        },
        {
          "type": "SYMBOL",
          "name": "val_range"
        },
        {
          "type": "SYMBOL",
          "name": "expr_parenthesized"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "expr_binary_parenthesized"
          },
          "named": true,
          "value": "expr_binary"
        }
      ]
    },
    "expr_unary": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "ALIAS",
              "content": {
                "type": "TOKEN",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "not"
                    },
                    {
                      "type": "PATTERN",
                      "value": "\\s"
                    }
                  ]
                }
              },
              "named": false,
              "value": "not"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "val_bool"
                },
                {
                  "type": "SYMBOL",
                  "name": "expr_parenthesized"
                },
                {
                  "type": "SYMBOL",
                  "name": "val_variable"
                },
                {
                  "type": "SYMBOL",
                  "name": "expr_unary"
                }
              ]
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_expr_unary_minus"
        }
      ]
    },
    "_expr_unary_minus": {
      "type": "SEQ",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "-"
          }
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "IMMEDIATE_TOKEN",
              "content": {
                "type": "STRING",
                "value": "("
              }
            },
            {
              "type": "SYMBOL",
              "name": "_block_body"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    },
    "expr_binary": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 14,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "**"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 14,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "++"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 13,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "*"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 13,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "/"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 13,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "mod"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 13,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "//"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 12,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "+"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 12,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "-"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 11,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "bit-shl"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 11,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "bit-shr"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 8,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "=~"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 8,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "!~"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 7,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "bit-and"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 6,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "bit-xor"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 5,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "bit-or"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 4,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "and"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 3,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "xor"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 2,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "or"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 9,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "in"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 9,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "not-in"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 9,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "starts-with"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 9,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "ends-with"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "=="
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "!="
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "<"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "<="
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": ">"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": ">="
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 8,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "=~"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 8,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "!~"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "expr_binary_parenthesized": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 14,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "**"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 14,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "++"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 13,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "*"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 13,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "/"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 13,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "mod"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 13,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "//"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 12,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "+"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 12,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "-"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 11,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "bit-shl"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 11,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "bit-shr"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 8,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "=~"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 8,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "!~"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 7,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "bit-and"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 6,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "bit-xor"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 5,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "bit-or"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 4,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "and"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 3,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "xor"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 2,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "or"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 9,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "in"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 9,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "not-in"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 9,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "starts-with"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 9,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "ends-with"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "=="
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "!="
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "<"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "<="
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": ">"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 10,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": ">="
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 8,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "=~"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 8,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "lhs",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expr_binary_expression_parenthesized"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "opr",
                "content": {
                  "type": "STRING",
                  "value": "!~"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "FIELD",
                "name": "rhs",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_expr_binary_expression_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "unquoted"
                      },
                      "named": true,
                      "value": "val_string"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_unquoted_with_expr"
                      },
                      "named": true,
                      "value": "val_string"
                    }
                  ]
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          }
        }
      ]
    },
    "_expr_binary_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_value"
        },
        {
          "type": "SYMBOL",
          "name": "val_range"
        },
        {
          "type": "SYMBOL",
          "name": "expr_binary"
        },
        {
          "type": "SYMBOL",
          "name": "expr_unary"
        },
        {
          "type": "SYMBOL",
          "name": "expr_parenthesized"
        }
      ]
    },
    "_expr_binary_expression_parenthesized": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_value"
        },
        {
          "type": "SYMBOL",
          "name": "val_range"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "expr_binary_parenthesized"
          },
          "named": true,
          "value": "expr_binary"
        },
        {
          "type": "SYMBOL",
          "name": "expr_unary"
        },
        {
          "type": "SYMBOL",
          "name": "expr_parenthesized"
        }
      ]
    },
    "expr_parenthesized": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_parenthesized_body"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "cell_path"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_spread_parenthesized": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "...("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_parenthesized_body"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "cell_path"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_expr_parenthesized_immediate": {
      "type": "SEQ",
      "members": [
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": "("
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_parenthesized_body"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "_parenthesized_body": {
      "type": "CHOICE",
      "members": [
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "_terminator"
          }
        },
        {
          "type": "PREC",
          "value": 20,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_terminator"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_block_body_statement_parenthesized"
                    },
                    {
                      "type": "REPEAT1",
                      "content": {
                        "type": "SEQ",
                        "members": [
                          {
                            "type": "REPEAT",
                            "content": {
                              "type": "SYMBOL",
                              "name": "_newline"
                            }
                          },
                          {
                            "type": "STRING",
                            "value": ";"
                          }
                        ]
                      }
                    },
                    {
                      "type": "REPEAT",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_newline"
                      }
                    }
                  ]
                }
              },
              {
                "type": "SYMBOL",
                "name": "_block_body_statement_parenthesized"
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_terminator"
                }
              }
            ]
          }
        }
      ]
    },
    "val_range": {
      "type": "PREC_RIGHT",
      "value": 15,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "start",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_val_number_decimal"
                      },
                      "named": true,
                      "value": "val_number"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    }
                  ]
                }
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "STRING",
                  "value": ".."
                }
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "STRING",
                  "value": "."
                }
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": ".."
                    }
                  },
                  {
                    "type": "TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..="
                    }
                  },
                  {
                    "type": "TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..<"
                    }
                  }
                ]
              },
              {
                "type": "FIELD",
                "name": "end",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_expr_parenthesized_immediate"
                      },
                      "named": true,
                      "value": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_immediate_decimal"
                      },
                      "named": true,
                      "value": "val_number"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    }
                  ]
                }
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "TOKEN",
                "content": {
                  "type": "STRING",
                  "value": ".."
                }
              },
              {
                "type": "FIELD",
                "name": "step",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_expr_parenthesized_immediate"
                      },
                      "named": true,
                      "value": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_immediate_decimal"
                      },
                      "named": true,
                      "value": "val_number"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    }
                  ]
                }
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": ".."
                    }
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..="
                    }
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..<"
                    }
                  }
                ]
              },
              {
                "type": "FIELD",
                "name": "end",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_expr_parenthesized_immediate"
                      },
                      "named": true,
                      "value": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_immediate_decimal"
                      },
                      "named": true,
                      "value": "val_number"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    }
                  ]
                }
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "start",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "expr_parenthesized"
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_val_number_decimal"
                      },
                      "named": true,
                      "value": "val_number"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "val_variable"
                    }
                  ]
                }
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "IMMEDIATE_TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": ".."
                        }
                      },
                      {
                        "type": "FIELD",
                        "name": "step",
                        "content": {
                          "type": "CHOICE",
                          "members": [
                            {
                              "type": "ALIAS",
                              "content": {
                                "type": "SYMBOL",
                                "name": "_expr_parenthesized_immediate"
                              },
                              "named": true,
                              "value": "expr_parenthesized"
                            },
                            {
                              "type": "ALIAS",
                              "content": {
                                "type": "SYMBOL",
                                "name": "_immediate_decimal"
                              },
                              "named": true,
                              "value": "val_number"
                            },
                            {
                              "type": "SYMBOL",
                              "name": "val_variable"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": ".."
                    }
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..="
                    }
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..<"
                    }
                  }
                ]
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "FIELD",
                    "name": "end",
                    "content": {
                      "type": "CHOICE",
                      "members": [
                        {
                          "type": "ALIAS",
                          "content": {
                            "type": "SYMBOL",
                            "name": "_expr_parenthesized_immediate"
                          },
                          "named": true,
                          "value": "expr_parenthesized"
                        },
                        {
                          "type": "ALIAS",
                          "content": {
                            "type": "SYMBOL",
                            "name": "_immediate_decimal"
                          },
                          "named": true,
                          "value": "val_number"
                        },
                        {
                          "type": "SYMBOL",
                          "name": "val_variable"
                        }
                      ]
                    }
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "_val_range": {
      "type": "PREC_RIGHT",
      "value": 14,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_val_number_decimal"
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "STRING",
                  "value": ".."
                }
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "STRING",
                  "value": "."
                }
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": ".."
                    }
                  },
                  {
                    "type": "TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..="
                    }
                  },
                  {
                    "type": "TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..<"
                    }
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_immediate_decimal"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "TOKEN",
                "content": {
                  "type": "STRING",
                  "value": ".."
                }
              },
              {
                "type": "SYMBOL",
                "name": "_immediate_decimal"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": ".."
                    }
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..="
                    }
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..<"
                    }
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_immediate_decimal"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_val_number_decimal"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "IMMEDIATE_TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": ".."
                        }
                      },
                      {
                        "type": "SYMBOL",
                        "name": "_immediate_decimal"
                      }
                    ]
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": ".."
                    }
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..="
                    }
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..<"
                    }
                  }
                ]
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_immediate_decimal"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "_val_range_with_end": {
      "type": "PREC_RIGHT",
      "value": 14,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_val_number_decimal"
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "STRING",
                  "value": ".."
                }
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "STRING",
                  "value": "."
                }
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": ".."
                    }
                  },
                  {
                    "type": "TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..="
                    }
                  },
                  {
                    "type": "TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..<"
                    }
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_immediate_decimal"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "TOKEN",
                "content": {
                  "type": "STRING",
                  "value": ".."
                }
              },
              {
                "type": "SYMBOL",
                "name": "_immediate_decimal"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": ".."
                    }
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..="
                    }
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..<"
                    }
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_immediate_decimal"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_val_number_decimal"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "IMMEDIATE_TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": ".."
                        }
                      },
                      {
                        "type": "SYMBOL",
                        "name": "_immediate_decimal"
                      }
                    ]
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": ".."
                    }
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..="
                    }
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "..<"
                    }
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_immediate_decimal"
              }
            ]
          }
        ]
      }
    },
    "_immediate_decimal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "IMMEDIATE_TOKEN",
              "content": {
                "type": "PATTERN",
                "value": "[\\d_]*\\d[\\d_]*"
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "PATTERN",
                    "value": "[eE][-+]?[\\d_]*\\d[\\d_]*"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "TOKEN",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "IMMEDIATE_TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": "-"
                        }
                      },
                      {
                        "type": "IMMEDIATE_TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": "+"
                        }
                      }
                    ]
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "PATTERN",
                      "value": "[\\d_]*\\d[\\d_]*"
                    }
                  }
                ]
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "PATTERN",
                    "value": "[eE][-+]?[\\d_]*\\d[\\d_]*"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "IMMEDIATE_TOKEN",
              "content": {
                "type": "PATTERN",
                "value": "[\\d_]*\\d[\\d_]*"
              }
            },
            {
              "type": "IMMEDIATE_TOKEN",
              "content": {
                "type": "STRING",
                "value": "."
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "PATTERN",
                    "value": "[\\d_]*\\d[\\d_]*"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "PATTERN",
                    "value": "[eE][-+]?[\\d_]*\\d[\\d_]*"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "TOKEN",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "IMMEDIATE_TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": "-"
                        }
                      },
                      {
                        "type": "IMMEDIATE_TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": "+"
                        }
                      }
                    ]
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "PATTERN",
                      "value": "[\\d_]*\\d[\\d_]*"
                    }
                  }
                ]
              }
            },
            {
              "type": "IMMEDIATE_TOKEN",
              "content": {
                "type": "STRING",
                "value": "."
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "PATTERN",
                    "value": "[\\d_]*\\d[\\d_]*"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "PATTERN",
                    "value": "[eE][-+]?[\\d_]*\\d[\\d_]*"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "STRING",
                  "value": "."
                }
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "PATTERN",
                  "value": "[\\d_]*\\d[\\d_]*"
                }
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "PATTERN",
                      "value": "[eE][-+]?[\\d_]*\\d[\\d_]*"
                    }
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "TOKEN",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "IMMEDIATE_TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": "-"
                        }
                      },
                      {
                        "type": "IMMEDIATE_TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": "+"
                        }
                      }
                    ]
                  },
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "IMMEDIATE_TOKEN",
                        "content": {
                          "type": "PATTERN",
                          "value": "_+"
                        }
                      },
                      {
                        "type": "BLANK"
                      }
                    ]
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "."
                    }
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "PATTERN",
                      "value": "[\\d_]*\\d[\\d_]*"
                    }
                  }
                ]
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "PATTERN",
                    "value": "[eE][-+]?[\\d_]*\\d[\\d_]*"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        }
      ]
    },
    "_value": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "val_variable"
        },
        {
          "type": "SYMBOL",
          "name": "val_nothing"
        },
        {
          "type": "SYMBOL",
          "name": "val_bool"
        },
        {
          "type": "SYMBOL",
          "name": "val_number"
        },
        {
          "type": "SYMBOL",
          "name": "val_duration"
        },
        {
          "type": "SYMBOL",
          "name": "val_filesize"
        },
        {
          "type": "SYMBOL",
          "name": "val_binary"
        },
        {
          "type": "SYMBOL",
          "name": "val_string"
        },
        {
          "type": "SYMBOL",
          "name": "val_interpolated"
        },
        {
          "type": "SYMBOL",
          "name": "val_date"
        },
        {
          "type": "SYMBOL",
          "name": "val_list"
        },
        {
          "type": "SYMBOL",
          "name": "val_record"
        },
        {
          "type": "SYMBOL",
          "name": "val_table"
        },
        {
          "type": "SYMBOL",
          "name": "val_closure"
        }
      ]
    },
    "val_nothing": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "null"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "TOKEN",
              "content": {
                "type": "STRING",
                "value": "("
              }
            },
            {
              "type": "IMMEDIATE_TOKEN",
              "content": {
                "type": "STRING",
                "value": ")"
              }
            }
          ]
        }
      ]
    },
    "val_bool": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "_spread_variable": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "...$"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "cell_path"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "val_variable": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "$"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "nu"
              },
              {
                "type": "STRING",
                "value": "in"
              },
              {
                "type": "STRING",
                "value": "env"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "cell_path"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "val_number": {
      "type": "SYMBOL",
      "name": "_val_number"
    },
    "_val_number_decimal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "TOKEN",
              "content": {
                "type": "PATTERN",
                "value": "[\\d_]*\\d[\\d_]*"
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "PATTERN",
                    "value": "[eE][-+]?[\\d_]*\\d[\\d_]*"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "TOKEN",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": "-"
                        }
                      },
                      {
                        "type": "TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": "+"
                        }
                      }
                    ]
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "PATTERN",
                      "value": "[\\d_]*\\d[\\d_]*"
                    }
                  }
                ]
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "PATTERN",
                    "value": "[eE][-+]?[\\d_]*\\d[\\d_]*"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "TOKEN",
              "content": {
                "type": "PATTERN",
                "value": "[\\d_]*\\d[\\d_]*"
              }
            },
            {
              "type": "IMMEDIATE_TOKEN",
              "content": {
                "type": "STRING",
                "value": "."
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "PATTERN",
                    "value": "[\\d_]*\\d[\\d_]*"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "PATTERN",
                    "value": "[eE][-+]?[\\d_]*\\d[\\d_]*"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "TOKEN",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": "-"
                        }
                      },
                      {
                        "type": "TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": "+"
                        }
                      }
                    ]
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "PATTERN",
                      "value": "[\\d_]*\\d[\\d_]*"
                    }
                  }
                ]
              }
            },
            {
              "type": "IMMEDIATE_TOKEN",
              "content": {
                "type": "STRING",
                "value": "."
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "PATTERN",
                    "value": "[\\d_]*\\d[\\d_]*"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "PATTERN",
                    "value": "[eE][-+]?[\\d_]*\\d[\\d_]*"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "TOKEN",
                "content": {
                  "type": "STRING",
                  "value": "."
                }
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "PATTERN",
                  "value": "[\\d_]*\\d[\\d_]*"
                }
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "PATTERN",
                      "value": "[eE][-+]?[\\d_]*\\d[\\d_]*"
                    }
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "TOKEN",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": "-"
                        }
                      },
                      {
                        "type": "TOKEN",
                        "content": {
                          "type": "STRING",
                          "value": "+"
                        }
                      }
                    ]
                  },
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "IMMEDIATE_TOKEN",
                        "content": {
                          "type": "PATTERN",
                          "value": "_+"
                        }
                      },
                      {
                        "type": "BLANK"
                      }
                    ]
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "STRING",
                      "value": "."
                    }
                  },
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "PATTERN",
                      "value": "[\\d_]*\\d[\\d_]*"
                    }
                  }
                ]
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "PATTERN",
                    "value": "[eE][-+]?[\\d_]*\\d[\\d_]*"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        }
      ]
    },
    "_val_number": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_val_number_decimal"
        },
        {
          "type": "PATTERN",
          "value": "0x[0-9a-fA-F_]+"
        },
        {
          "type": "PATTERN",
          "value": "0b[01_]+"
        },
        {
          "type": "PATTERN",
          "value": "0o[0-7_]+"
        },
        {
          "type": "PATTERN",
          "value": "[iI][nN][fF]([iI][nN][iI][tT][yY])?"
        },
        {
          "type": "PATTERN",
          "value": "-[iI][nN][fF]([iI][nN][iI][tT][yY])?"
        },
        {
          "type": "PATTERN",
          "value": "[nN][aA][nN]"
        }
      ]
    },
    "val_duration": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "SYMBOL",
              "name": "_val_number_decimal"
            },
            "named": true,
            "value": "val_number"
          }
        },
        {
          "type": "FIELD",
          "name": "unit",
          "content": {
            "type": "SYMBOL",
            "name": "duration_unit"
          }
        }
      ]
    },
    "val_filesize": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "0b"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "FIELD",
              "name": "value",
              "content": {
                "type": "ALIAS",
                "content": {
                  "type": "SYMBOL",
                  "name": "_val_number_decimal"
                },
                "named": true,
                "value": "val_number"
              }
            },
            {
              "type": "FIELD",
              "name": "unit",
              "content": {
                "type": "SYMBOL",
                "name": "filesize_unit"
              }
            }
          ]
        }
      ]
    },
    "filesize_unit": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "b"
          },
          {
            "type": "STRING",
            "value": "B"
          },
          {
            "type": "STRING",
            "value": "kb"
          },
          {
            "type": "STRING",
            "value": "kB"
          },
          {
            "type": "STRING",
            "value": "Kb"
          },
          {
            "type": "STRING",
            "value": "KB"
          },
          {
            "type": "STRING",
            "value": "mb"
          },
          {
            "type": "STRING",
            "value": "mB"
          },
          {
            "type": "STRING",
            "value": "Mb"
          },
          {
            "type": "STRING",
            "value": "MB"
          },
          {
            "type": "STRING",
            "value": "gb"
          },
          {
            "type": "STRING",
            "value": "gB"
          },
          {
            "type": "STRING",
            "value": "Gb"
          },
          {
            "type": "STRING",
            "value": "GB"
          },
          {
            "type": "STRING",
            "value": "tb"
          },
          {
            "type": "STRING",
            "value": "tB"
          },
          {
            "type": "STRING",
            "value": "Tb"
          },
          {
            "type": "STRING",
            "value": "TB"
          },
          {
            "type": "STRING",
            "value": "pb"
          },
          {
            "type": "STRING",
            "value": "pB"
          },
          {
            "type": "STRING",
            "value": "Pb"
          },
          {
            "type": "STRING",
            "value": "PB"
          },
          {
            "type": "STRING",
            "value": "eb"
          },
          {
            "type": "STRING",
            "value": "eB"
          },
          {
            "type": "STRING",
            "value": "Eb"
          },
          {
            "type": "STRING",
            "value": "EB"
          },
          {
            "type": "STRING",
            "value": "kib"
          },
          {
            "type": "STRING",
            "value": "kiB"
          },
          {
            "type": "STRING",
            "value": "kIB"
          },
          {
            "type": "STRING",
            "value": "kIb"
          },
          {
            "type": "STRING",
            "value": "Kib"
          },
          {
            "type": "STRING",
            "value": "KIb"
          },
          {
            "type": "STRING",
            "value": "KIB"
          },
          {
            "type": "STRING",
            "value": "mib"
          },
          {
            "type": "STRING",
            "value": "miB"
          },
          {
            "type": "STRING",
            "value": "mIB"
          },
          {
            "type": "STRING",
            "value": "mIb"
          },
          {
            "type": "STRING",
            "value": "Mib"
          },
          {
            "type": "STRING",
            "value": "MIb"
          },
          {
            "type": "STRING",
            "value": "MIB"
          },
          {
            "type": "STRING",
            "value": "gib"
          },
          {
            "type": "STRING",
            "value": "giB"
          },
          {
            "type": "STRING",
            "value": "gIB"
          },
          {
            "type": "STRING",
            "value": "gIb"
          },
          {
            "type": "STRING",
            "value": "Gib"
          },
          {
            "type": "STRING",
            "value": "GIb"
          },
          {
            "type": "STRING",
            "value": "GIB"
          },
          {
            "type": "STRING",
            "value": "tib"
          },
          {
            "type": "STRING",
            "value": "tiB"
          },
          {
            "type": "STRING",
            "value": "tIB"
          },
          {
            "type": "STRING",
            "value": "tIb"
          },
          {
            "type": "STRING",
            "value": "Tib"
          },
          {
            "type": "STRING",
            "value": "TIb"
          },
          {
            "type": "STRING",
            "value": "TIB"
          },
          {
            "type": "STRING",
            "value": "pib"
          },
          {
            "type": "STRING",
            "value": "piB"
          },
          {
            "type": "STRING",
            "value": "pIB"
          },
          {
            "type": "STRING",
            "value": "pIb"
          },
          {
            "type": "STRING",
            "value": "Pib"
          },
          {
            "type": "STRING",
            "value": "PIb"
          },
          {
            "type": "STRING",
            "value": "PIB"
          },
          {
            "type": "STRING",
            "value": "eib"
          },
          {
            "type": "STRING",
            "value": "eiB"
          },
          {
            "type": "STRING",
            "value": "eIB"
          },
          {
            "type": "STRING",
            "value": "eIb"
          },
          {
            "type": "STRING",
            "value": "Eib"
          },
          {
            "type": "STRING",
            "value": "EIb"
          },
          {
            "type": "STRING",
            "value": "EIB"
          }
        ]
      }
    },
    "duration_unit": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "ns"
          },
          {
            "type": "STRING",
            "value": "µs"
          },
          {
            "type": "STRING",
            "value": "us"
          },
          {
            "type": "STRING",
            "value": "ms"
          },
          {
            "type": "STRING",
            "value": "sec"
          },
          {
            "type": "STRING",
            "value": "min"
          },
          {
            "type": "STRING",
            "value": "hr"
          },
          {
            "type": "STRING",
            "value": "day"
          },
          {
            "type": "STRING",
            "value": "wk"
          }
        ]
      }
    },
    "val_binary": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "0b"
            },
            {
              "type": "STRING",
              "value": "0o"
            },
            {
              "type": "STRING",
              "value": "0x"
            }
          ]
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": "["
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "FIELD",
            "name": "digit",
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "hex_digit"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "STRING",
                      "value": ","
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "hex_digit": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[0-9a-fA-F]+"
      }
    },
    "val_date": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "flags": "i"
          },
          {
            "type": "PATTERN",
            "value": "[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?([Zz]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?"
          }
        ]
      }
    },
    "_stringish": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "val_string"
        },
        {
          "type": "SYMBOL",
          "name": "val_interpolated"
        },
        {
          "type": "SYMBOL",
          "name": "expr_parenthesized"
        },
        {
          "type": "SYMBOL",
          "name": "val_variable"
        }
      ]
    },
    "val_string": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_str_double_quotes"
        },
        {
          "type": "SYMBOL",
          "name": "_str_single_quotes"
        },
        {
          "type": "SYMBOL",
          "name": "_str_back_ticks"
        },
        {
          "type": "SYMBOL",
          "name": "_raw_str"
        }
      ]
    },
    "_raw_str": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "raw_string_begin"
        },
        {
          "type": "SYMBOL",
          "name": "raw_string_content"
        },
        {
          "type": "SYMBOL",
          "name": "raw_string_end"
        }
      ]
    },
    "_str_double_quotes": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_escaped_str_content"
              },
              {
                "type": "SYMBOL",
                "name": "escape_sequence"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "_escaped_str_content": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "PREC",
        "value": 1,
        "content": {
          "type": "PATTERN",
          "value": "[^\"\\\\]+"
        }
      }
    },
    "_str_single_quotes": {
      "type": "PATTERN",
      "value": "'[^']*'"
    },
    "_str_back_ticks": {
      "type": "PATTERN",
      "value": "`[^`]*`"
    },
    "escape_sequence": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^xu]"
              },
              {
                "type": "PATTERN",
                "value": "u[0-9a-fA-F]{4}"
              },
              {
                "type": "PATTERN",
                "value": "u\\{[0-9a-fA-F]+\\}"
              },
              {
                "type": "PATTERN",
                "value": "x[0-9a-fA-F]{2}"
              }
            ]
          }
        ]
      }
    },
    "val_interpolated": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_inter_single_quotes"
        },
        {
          "type": "SYMBOL",
          "name": "_inter_double_quotes"
        }
      ]
    },
    "escaped_interpolated_content": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "PREC",
        "value": 1,
        "content": {
          "type": "PATTERN",
          "value": "[^\"\\\\(]+"
        }
      }
    },
    "unescaped_interpolated_content": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "PREC",
        "value": 1,
        "content": {
          "type": "PATTERN",
          "value": "[^'(]+"
        }
      }
    },
    "_inter_single_quotes": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "$'"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "FIELD",
                "name": "expr",
                "content": {
                  "type": "SYMBOL",
                  "name": "expr_interpolated"
                }
              },
              {
                "type": "SYMBOL",
                "name": "unescaped_interpolated_content"
              }
            ]
          }
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": "'"
          }
        }
      ]
    },
    "_inter_double_quotes": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "$\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "FIELD",
                "name": "expr",
                "content": {
                  "type": "SYMBOL",
                  "name": "expr_interpolated"
                }
              },
              {
                "type": "SYMBOL",
                "name": "inter_escape_sequence"
              },
              {
                "type": "SYMBOL",
                "name": "escaped_interpolated_content"
              }
            ]
          }
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": "\""
          }
        }
      ]
    },
    "inter_escape_sequence": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^xu]"
              },
              {
                "type": "PATTERN",
                "value": "u[0-9a-fA-F]{4}"
              },
              {
                "type": "PATTERN",
                "value": "u\\{[0-9a-fA-F]+\\}"
              },
              {
                "type": "PATTERN",
                "value": "x[0-9a-fA-F]{2}"
              },
              {
                "type": "STRING",
                "value": "("
              }
            ]
          }
        ]
      }
    },
    "expr_interpolated": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "_parenthesized_body"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "val_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "list_body"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "cell_path"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_spread_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "...["
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "list_body"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "cell_path"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_spread_listish": {
      "type": "CHOICE",
      "members": [
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "_spread_list"
          },
          "named": true,
          "value": "val_list"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "_spread_variable"
          },
          "named": true,
          "value": "val_variable"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "_spread_parenthesized"
          },
          "named": true,
          "value": "expr_parenthesized"
        }
      ]
    },
    "list_body": {
      "type": "CHOICE",
      "members": [
        {
          "type": "REPEAT1",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_newline"
              },
              {
                "type": "STRING",
                "value": ","
              }
            ]
          }
        },
        {
          "type": "PREC",
          "value": 20,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "FIELD",
                      "name": "entry",
                      "content": {
                        "type": "SYMBOL",
                        "name": "val_entry"
                      }
                    },
                    {
                      "type": "REPEAT1",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_entry_separator"
                      }
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "entry",
                "content": {
                  "type": "SYMBOL",
                  "name": "val_entry"
                }
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_entry_separator"
                }
              }
            ]
          }
        }
      ]
    },
    "val_entry": {
      "type": "PREC",
      "value": 10,
      "content": {
        "type": "FIELD",
        "name": "item",
        "content": {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_item_expression"
            },
            {
              "type": "FIELD",
              "name": "spread",
              "content": {
                "type": "SYMBOL",
                "name": "_spread_listish"
              }
            },
            {
              "type": "ALIAS",
              "content": {
                "type": "SYMBOL",
                "name": "_unquoted_in_list"
              },
              "named": true,
              "value": "val_string"
            },
            {
              "type": "ALIAS",
              "content": {
                "type": "SYMBOL",
                "name": "_unquoted_in_list_with_expr"
              },
              "named": true,
              "value": "val_string"
            }
          ]
        }
      }
    },
    "_item_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_value"
        },
        {
          "type": "SYMBOL",
          "name": "val_range"
        },
        {
          "type": "SYMBOL",
          "name": "expr_parenthesized"
        }
      ]
    },
    "val_record": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "record_body"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "cell_path"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_spread_record": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "...{"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "record_body"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "cell_path"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_spread_recordish": {
      "type": "CHOICE",
      "members": [
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "_spread_record"
          },
          "named": true,
          "value": "val_record"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "_spread_variable"
          },
          "named": true,
          "value": "val_variable"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "_spread_parenthesized"
          },
          "named": true,
          "value": "expr_parenthesized"
        }
      ]
    },
    "record_body": {
      "type": "PREC",
      "value": 20,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "_newline"
            }
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "FIELD",
                  "name": "entry",
                  "content": {
                    "type": "SYMBOL",
                    "name": "record_entry"
                  }
                },
                {
                  "type": "REPEAT1",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_entry_separator"
                  }
                }
              ]
            }
          },
          {
            "type": "FIELD",
            "name": "entry",
            "content": {
              "type": "SYMBOL",
              "name": "record_entry"
            }
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "_entry_separator"
            }
          }
        ]
      }
    },
    "_entry_separator": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 20,
        "content": {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": ","
            },
            {
              "type": "PATTERN",
              "value": "\\s"
            }
          ]
        }
      }
    },
    "record_entry": {
      "type": "CHOICE",
      "members": [
        {
          "type": "FIELD",
          "name": "spread",
          "content": {
            "type": "SYMBOL",
            "name": "_spread_recordish"
          }
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "FIELD",
              "name": "key",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "ALIAS",
                        "content": {
                          "type": "SYMBOL",
                          "name": "cmd_identifier"
                        },
                        "named": true,
                        "value": "identifier"
                      },
                      {
                        "type": "REPEAT",
                        "content": {
                          "type": "SYMBOL",
                          "name": "_separator"
                        }
                      }
                    ]
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_record_key"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "val_string"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "val_number"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "val_variable"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "expr_parenthesized"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "def"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "alias"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "use"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "export-env"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "extern"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "module"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "let"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "let-env"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "mut"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "const"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "hide"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "hide-env"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "source"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "source-env"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "overlay"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "register"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "for"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "loop"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "while"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "error"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "do"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "if"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "else"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "try"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "catch"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "match"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "break"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "continue"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "return"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "as"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "in"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "make"
                    },
                    "named": true,
                    "value": "identifier"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "STRING",
                      "value": "export"
                    },
                    "named": true,
                    "value": "identifier"
                  }
                ]
              }
            },
            {
              "type": "TOKEN",
              "content": {
                "type": "PREC",
                "value": 20,
                "content": {
                  "type": "STRING",
                  "value": ":"
                }
              }
            },
            {
              "type": "FIELD",
              "name": "value",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_item_expression"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_unquoted_in_record"
                    },
                    "named": true,
                    "value": "val_string"
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_unquoted_in_record_with_expr"
                    },
                    "named": true,
                    "value": "val_string"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "_record_key": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "TOKEN",
              "content": {
                "type": "STRING",
                "value": "-"
              }
            },
            {
              "type": "TOKEN",
              "content": {
                "type": "STRING",
                "value": "+"
              }
            }
          ]
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "PATTERN",
              "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`':,]"
            }
          }
        }
      ]
    },
    "_table_head_separator": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 20,
        "content": {
          "type": "SEQ",
          "members": [
            {
              "type": "PATTERN",
              "value": "\\s*"
            },
            {
              "type": "STRING",
              "value": ";"
            }
          ]
        }
      }
    },
    "val_table": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "FIELD",
          "name": "head",
          "content": {
            "type": "SYMBOL",
            "name": "val_list"
          }
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "_table_head_separator"
          },
          "named": false,
          "value": ";"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "PREC",
              "value": 20,
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_newline"
                    }
                  },
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "SEQ",
                      "members": [
                        {
                          "type": "FIELD",
                          "name": "row",
                          "content": {
                            "type": "SYMBOL",
                            "name": "val_list"
                          }
                        },
                        {
                          "type": "REPEAT1",
                          "content": {
                            "type": "SYMBOL",
                            "name": "_entry_separator"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "FIELD",
                    "name": "row",
                    "content": {
                      "type": "SYMBOL",
                      "name": "val_list"
                    }
                  },
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "SYMBOL",
                      "name": "_entry_separator"
                    }
                  }
                ]
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "cell_path"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "val_closure": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "FIELD",
              "name": "parameters",
              "content": {
                "type": "SYMBOL",
                "name": "parameter_pipes"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_block_body"
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "cell_path": {
      "type": "REPEAT1",
      "content": {
        "type": "SYMBOL",
        "name": "path"
      }
    },
    "path": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "."
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "FIELD",
              "name": "raw_path",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "IMMEDIATE_TOKEN",
                    "content": {
                      "type": "PREC",
                      "value": -1,
                      "content": {
                        "type": "REPEAT1",
                        "content": {
                          "type": "PATTERN",
                          "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}.,:?]"
                        }
                      }
                    }
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "SYMBOL",
                      "name": "val_string"
                    },
                    "named": false,
                    "value": "quoted"
                  }
                ]
              }
            },
            {
              "type": "FIELD",
              "name": "protected_path",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "IMMEDIATE_TOKEN",
                        "content": {
                          "type": "PREC",
                          "value": -1,
                          "content": {
                            "type": "REPEAT1",
                            "content": {
                              "type": "PATTERN",
                              "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}.,:?]"
                            }
                          }
                        }
                      },
                      {
                        "type": "ALIAS",
                        "content": {
                          "type": "SYMBOL",
                          "name": "val_string"
                        },
                        "named": false,
                        "value": "quoted"
                      }
                    ]
                  },
                  {
                    "type": "STRING",
                    "value": "?"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "env_var": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "variable",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "TOKEN",
              "content": {
                "type": "PREC",
                "value": -1,
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "TOKEN",
                      "content": {
                        "type": "SEQ",
                        "members": [
                          {
                            "type": "PATTERN",
                            "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\-{}<>=\"`'@?,:.&*!^+#$]"
                          },
                          {
                            "type": "REPEAT",
                            "content": {
                              "type": "PATTERN",
                              "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\-{}<>=\"`'@?,:.]"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "STRING",
                      "value": "="
                    }
                  ]
                }
              }
            },
            "named": true,
            "value": "identifier"
          }
        },
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "IMMEDIATE_TOKEN",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "PATTERN",
                    "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\-{}<>=\"`'@?,:.&*!^+#$]"
                  },
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "PATTERN",
                      "value": "[^\\s\\r\\n\\t\\|();\\[\\]\\-{}<>=\"`'@?,:.]"
                    }
                  }
                ]
              }
            },
            "named": true,
            "value": "val_string"
          }
        }
      ]
    },
    "command": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "FIELD",
                "name": "head",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "CHOICE",
                      "members": [
                        {
                          "type": "STRING",
                          "value": "^"
                        },
                        {
                          "type": "BLANK"
                        }
                      ]
                    },
                    {
                      "type": "SYMBOL",
                      "name": "cmd_identifier"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "head",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "^"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_stringish"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "head",
                "content": {
                  "type": "ALIAS",
                  "content": {
                    "type": "TOKEN",
                    "content": {
                      "type": "SEQ",
                      "members": [
                        {
                          "type": "CHOICE",
                          "members": [
                            {
                              "type": "STRING",
                              "value": "ansi gradient"
                            },
                            {
                              "type": "STRING",
                              "value": "ansi link"
                            },
                            {
                              "type": "STRING",
                              "value": "ansi strip"
                            },
                            {
                              "type": "STRING",
                              "value": "bits and"
                            },
                            {
                              "type": "STRING",
                              "value": "bits not"
                            },
                            {
                              "type": "STRING",
                              "value": "bits or"
                            },
                            {
                              "type": "STRING",
                              "value": "bits rol"
                            },
                            {
                              "type": "STRING",
                              "value": "bits ror"
                            },
                            {
                              "type": "STRING",
                              "value": "bits shl"
                            },
                            {
                              "type": "STRING",
                              "value": "bits shr"
                            },
                            {
                              "type": "STRING",
                              "value": "bits xor"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes add"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes at"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes build"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes collect"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes ends-with"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes index-of"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes length"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes remove"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes replace"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes reverse"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes starts-with"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo add"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo bench"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo build"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo check"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo clean"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo clippy"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo doc"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo help"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo init"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo install"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo install-update"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo metadata"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo new"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo publish"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo run"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo search"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo test"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo uninstall"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo update"
                            },
                            {
                              "type": "STRING",
                              "value": "commandline edit"
                            },
                            {
                              "type": "STRING",
                              "value": "commandline get-cursor"
                            },
                            {
                              "type": "STRING",
                              "value": "commandline set-cursor"
                            },
                            {
                              "type": "STRING",
                              "value": "config env"
                            },
                            {
                              "type": "STRING",
                              "value": "config nu"
                            },
                            {
                              "type": "STRING",
                              "value": "config reset"
                            },
                            {
                              "type": "STRING",
                              "value": "date format"
                            },
                            {
                              "type": "STRING",
                              "value": "date humanize"
                            },
                            {
                              "type": "STRING",
                              "value": "date list-timezone"
                            },
                            {
                              "type": "STRING",
                              "value": "date now"
                            },
                            {
                              "type": "STRING",
                              "value": "date to-record"
                            },
                            {
                              "type": "STRING",
                              "value": "date to-table"
                            },
                            {
                              "type": "STRING",
                              "value": "date to-timezone"
                            },
                            {
                              "type": "STRING",
                              "value": "debug info"
                            },
                            {
                              "type": "STRING",
                              "value": "debug profile"
                            },
                            {
                              "type": "STRING",
                              "value": "decode base32"
                            },
                            {
                              "type": "STRING",
                              "value": "decode base32hex"
                            },
                            {
                              "type": "STRING",
                              "value": "decode base64"
                            },
                            {
                              "type": "STRING",
                              "value": "decode hex"
                            },
                            {
                              "type": "STRING",
                              "value": "detect columns"
                            },
                            {
                              "type": "STRING",
                              "value": "drop column"
                            },
                            {
                              "type": "STRING",
                              "value": "drop nth"
                            },
                            {
                              "type": "STRING",
                              "value": "dt add"
                            },
                            {
                              "type": "STRING",
                              "value": "dt diff"
                            },
                            {
                              "type": "STRING",
                              "value": "dt format"
                            },
                            {
                              "type": "STRING",
                              "value": "dt now"
                            },
                            {
                              "type": "STRING",
                              "value": "dt part"
                            },
                            {
                              "type": "STRING",
                              "value": "dt to"
                            },
                            {
                              "type": "STRING",
                              "value": "dt utcnow"
                            },
                            {
                              "type": "STRING",
                              "value": "each while"
                            },
                            {
                              "type": "STRING",
                              "value": "encode base32"
                            },
                            {
                              "type": "STRING",
                              "value": "encode base32hex"
                            },
                            {
                              "type": "STRING",
                              "value": "encode base64"
                            },
                            {
                              "type": "STRING",
                              "value": "encode hex"
                            },
                            {
                              "type": "STRING",
                              "value": "explore ir"
                            },
                            {
                              "type": "STRING",
                              "value": "format date"
                            },
                            {
                              "type": "STRING",
                              "value": "format duration"
                            },
                            {
                              "type": "STRING",
                              "value": "format filesize"
                            },
                            {
                              "type": "STRING",
                              "value": "format pattern"
                            },
                            {
                              "type": "STRING",
                              "value": "from bz2"
                            },
                            {
                              "type": "STRING",
                              "value": "from csv"
                            },
                            {
                              "type": "STRING",
                              "value": "from eml"
                            },
                            {
                              "type": "STRING",
                              "value": "from gz"
                            },
                            {
                              "type": "STRING",
                              "value": "from ics"
                            },
                            {
                              "type": "STRING",
                              "value": "from ini"
                            },
                            {
                              "type": "STRING",
                              "value": "from json"
                            },
                            {
                              "type": "STRING",
                              "value": "from msgpack"
                            },
                            {
                              "type": "STRING",
                              "value": "from msgpackz"
                            },
                            {
                              "type": "STRING",
                              "value": "from nuon"
                            },
                            {
                              "type": "STRING",
                              "value": "from ods"
                            },
                            {
                              "type": "STRING",
                              "value": "from parquet"
                            },
                            {
                              "type": "STRING",
                              "value": "from plist"
                            },
                            {
                              "type": "STRING",
                              "value": "from png"
                            },
                            {
                              "type": "STRING",
                              "value": "from ssv"
                            },
                            {
                              "type": "STRING",
                              "value": "from toml"
                            },
                            {
                              "type": "STRING",
                              "value": "from tsv"
                            },
                            {
                              "type": "STRING",
                              "value": "from url"
                            },
                            {
                              "type": "STRING",
                              "value": "from vcf"
                            },
                            {
                              "type": "STRING",
                              "value": "from xlsx"
                            },
                            {
                              "type": "STRING",
                              "value": "from xml"
                            },
                            {
                              "type": "STRING",
                              "value": "from xz"
                            },
                            {
                              "type": "STRING",
                              "value": "from yaml"
                            },
                            {
                              "type": "STRING",
                              "value": "from yml"
                            },
                            {
                              "type": "STRING",
                              "value": "from zst"
                            },
                            {
                              "type": "STRING",
                              "value": "gh alias"
                            },
                            {
                              "type": "STRING",
                              "value": "gh api"
                            },
                            {
                              "type": "STRING",
                              "value": "gh auth"
                            },
                            {
                              "type": "STRING",
                              "value": "gh browse"
                            },
                            {
                              "type": "STRING",
                              "value": "gh cache"
                            },
                            {
                              "type": "STRING",
                              "value": "gh codespace"
                            },
                            {
                              "type": "STRING",
                              "value": "gh completion"
                            },
                            {
                              "type": "STRING",
                              "value": "gh config"
                            },
                            {
                              "type": "STRING",
                              "value": "gh extension"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist clone"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist create"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist delete"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist edit"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist list"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist rename"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist view"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gpg-key"
                            },
                            {
                              "type": "STRING",
                              "value": "gh issue"
                            },
                            {
                              "type": "STRING",
                              "value": "gh label"
                            },
                            {
                              "type": "STRING",
                              "value": "gh org"
                            },
                            {
                              "type": "STRING",
                              "value": "gh pr"
                            },
                            {
                              "type": "STRING",
                              "value": "gh pr checkout"
                            },
                            {
                              "type": "STRING",
                              "value": "gh project"
                            },
                            {
                              "type": "STRING",
                              "value": "gh release"
                            },
                            {
                              "type": "STRING",
                              "value": "gh repo"
                            },
                            {
                              "type": "STRING",
                              "value": "gh repo clone"
                            },
                            {
                              "type": "STRING",
                              "value": "gh repo create"
                            },
                            {
                              "type": "STRING",
                              "value": "gh repo fork"
                            },
                            {
                              "type": "STRING",
                              "value": "gh repo list"
                            },
                            {
                              "type": "STRING",
                              "value": "gh repo view"
                            },
                            {
                              "type": "STRING",
                              "value": "gh ruleset"
                            },
                            {
                              "type": "STRING",
                              "value": "gh run"
                            },
                            {
                              "type": "STRING",
                              "value": "gh search"
                            },
                            {
                              "type": "STRING",
                              "value": "gh secret"
                            },
                            {
                              "type": "STRING",
                              "value": "gh ssh-key"
                            },
                            {
                              "type": "STRING",
                              "value": "gh status"
                            },
                            {
                              "type": "STRING",
                              "value": "gh variable"
                            },
                            {
                              "type": "STRING",
                              "value": "gh workflow"
                            },
                            {
                              "type": "STRING",
                              "value": "git add"
                            },
                            {
                              "type": "STRING",
                              "value": "git bisect bad"
                            },
                            {
                              "type": "STRING",
                              "value": "git bisect good"
                            },
                            {
                              "type": "STRING",
                              "value": "git bisect reset"
                            },
                            {
                              "type": "STRING",
                              "value": "git bisect skip"
                            },
                            {
                              "type": "STRING",
                              "value": "git bisect start"
                            },
                            {
                              "type": "STRING",
                              "value": "git branch"
                            },
                            {
                              "type": "STRING",
                              "value": "git checkout"
                            },
                            {
                              "type": "STRING",
                              "value": "git cherry-pick"
                            },
                            {
                              "type": "STRING",
                              "value": "git clone"
                            },
                            {
                              "type": "STRING",
                              "value": "git commit"
                            },
                            {
                              "type": "STRING",
                              "value": "git diff"
                            },
                            {
                              "type": "STRING",
                              "value": "git fetch"
                            },
                            {
                              "type": "STRING",
                              "value": "git grep"
                            },
                            {
                              "type": "STRING",
                              "value": "git help"
                            },
                            {
                              "type": "STRING",
                              "value": "git init"
                            },
                            {
                              "type": "STRING",
                              "value": "git log"
                            },
                            {
                              "type": "STRING",
                              "value": "git prune"
                            },
                            {
                              "type": "STRING",
                              "value": "git pull"
                            },
                            {
                              "type": "STRING",
                              "value": "git push"
                            },
                            {
                              "type": "STRING",
                              "value": "git rebase"
                            },
                            {
                              "type": "STRING",
                              "value": "git reflog"
                            },
                            {
                              "type": "STRING",
                              "value": "git remote"
                            },
                            {
                              "type": "STRING",
                              "value": "git remote add"
                            },
                            {
                              "type": "STRING",
                              "value": "git remote get-url"
                            },
                            {
                              "type": "STRING",
                              "value": "git remote remove"
                            },
                            {
                              "type": "STRING",
                              "value": "git remote rename"
                            },
                            {
                              "type": "STRING",
                              "value": "git remote set-url"
                            },
                            {
                              "type": "STRING",
                              "value": "git restore"
                            },
                            {
                              "type": "STRING",
                              "value": "git rm"
                            },
                            {
                              "type": "STRING",
                              "value": "git stash drop"
                            },
                            {
                              "type": "STRING",
                              "value": "git stash list"
                            },
                            {
                              "type": "STRING",
                              "value": "git stash pop"
                            },
                            {
                              "type": "STRING",
                              "value": "git stash push"
                            },
                            {
                              "type": "STRING",
                              "value": "git stash show"
                            },
                            {
                              "type": "STRING",
                              "value": "git status"
                            },
                            {
                              "type": "STRING",
                              "value": "git switch"
                            },
                            {
                              "type": "STRING",
                              "value": "git tag"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree add"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree list"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree lock"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree move"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree prune"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree remove"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree unlock"
                            },
                            {
                              "type": "STRING",
                              "value": "hash md5"
                            },
                            {
                              "type": "STRING",
                              "value": "hash sha256"
                            },
                            {
                              "type": "STRING",
                              "value": "help aliases"
                            },
                            {
                              "type": "STRING",
                              "value": "help commands"
                            },
                            {
                              "type": "STRING",
                              "value": "help escapes"
                            },
                            {
                              "type": "STRING",
                              "value": "help externs"
                            },
                            {
                              "type": "STRING",
                              "value": "help modules"
                            },
                            {
                              "type": "STRING",
                              "value": "help operators"
                            },
                            {
                              "type": "STRING",
                              "value": "history import"
                            },
                            {
                              "type": "STRING",
                              "value": "history session"
                            },
                            {
                              "type": "STRING",
                              "value": "http delete"
                            },
                            {
                              "type": "STRING",
                              "value": "http get"
                            },
                            {
                              "type": "STRING",
                              "value": "http head"
                            },
                            {
                              "type": "STRING",
                              "value": "http options"
                            },
                            {
                              "type": "STRING",
                              "value": "http patch"
                            },
                            {
                              "type": "STRING",
                              "value": "http post"
                            },
                            {
                              "type": "STRING",
                              "value": "http put"
                            },
                            {
                              "type": "STRING",
                              "value": "input list"
                            },
                            {
                              "type": "STRING",
                              "value": "input listen"
                            },
                            {
                              "type": "STRING",
                              "value": "into binary"
                            },
                            {
                              "type": "STRING",
                              "value": "into bits"
                            },
                            {
                              "type": "STRING",
                              "value": "into bool"
                            },
                            {
                              "type": "STRING",
                              "value": "into cell-path"
                            },
                            {
                              "type": "STRING",
                              "value": "into datetime"
                            },
                            {
                              "type": "STRING",
                              "value": "into duration"
                            },
                            {
                              "type": "STRING",
                              "value": "into filesize"
                            },
                            {
                              "type": "STRING",
                              "value": "into float"
                            },
                            {
                              "type": "STRING",
                              "value": "into glob"
                            },
                            {
                              "type": "STRING",
                              "value": "into int"
                            },
                            {
                              "type": "STRING",
                              "value": "into record"
                            },
                            {
                              "type": "STRING",
                              "value": "into sqlite"
                            },
                            {
                              "type": "STRING",
                              "value": "into string"
                            },
                            {
                              "type": "STRING",
                              "value": "into value"
                            },
                            {
                              "type": "STRING",
                              "value": "json path"
                            },
                            {
                              "type": "STRING",
                              "value": "keybindings default"
                            },
                            {
                              "type": "STRING",
                              "value": "keybindings list"
                            },
                            {
                              "type": "STRING",
                              "value": "keybindings listen"
                            },
                            {
                              "type": "STRING",
                              "value": "math abs"
                            },
                            {
                              "type": "STRING",
                              "value": "math arccos"
                            },
                            {
                              "type": "STRING",
                              "value": "math arccosh"
                            },
                            {
                              "type": "STRING",
                              "value": "math arcsin"
                            },
                            {
                              "type": "STRING",
                              "value": "math arcsinh"
                            },
                            {
                              "type": "STRING",
                              "value": "math arctan"
                            },
                            {
                              "type": "STRING",
                              "value": "math arctanh"
                            },
                            {
                              "type": "STRING",
                              "value": "math avg"
                            },
                            {
                              "type": "STRING",
                              "value": "math ceil"
                            },
                            {
                              "type": "STRING",
                              "value": "math cos"
                            },
                            {
                              "type": "STRING",
                              "value": "math cosh"
                            },
                            {
                              "type": "STRING",
                              "value": "math exp"
                            },
                            {
                              "type": "STRING",
                              "value": "math floor"
                            },
                            {
                              "type": "STRING",
                              "value": "math ln"
                            },
                            {
                              "type": "STRING",
                              "value": "math log"
                            },
                            {
                              "type": "STRING",
                              "value": "math max"
                            },
                            {
                              "type": "STRING",
                              "value": "math median"
                            },
                            {
                              "type": "STRING",
                              "value": "math min"
                            },
                            {
                              "type": "STRING",
                              "value": "math mode"
                            },
                            {
                              "type": "STRING",
                              "value": "math product"
                            },
                            {
                              "type": "STRING",
                              "value": "math round"
                            },
                            {
                              "type": "STRING",
                              "value": "math sin"
                            },
                            {
                              "type": "STRING",
                              "value": "math sinh"
                            },
                            {
                              "type": "STRING",
                              "value": "math sqrt"
                            },
                            {
                              "type": "STRING",
                              "value": "math stddev"
                            },
                            {
                              "type": "STRING",
                              "value": "math sum"
                            },
                            {
                              "type": "STRING",
                              "value": "math tan"
                            },
                            {
                              "type": "STRING",
                              "value": "math tanh"
                            },
                            {
                              "type": "STRING",
                              "value": "math variance"
                            },
                            {
                              "type": "STRING",
                              "value": "metadata access"
                            },
                            {
                              "type": "STRING",
                              "value": "metadata set"
                            },
                            {
                              "type": "STRING",
                              "value": "path basename"
                            },
                            {
                              "type": "STRING",
                              "value": "path dirname"
                            },
                            {
                              "type": "STRING",
                              "value": "path exists"
                            },
                            {
                              "type": "STRING",
                              "value": "path expand"
                            },
                            {
                              "type": "STRING",
                              "value": "path join"
                            },
                            {
                              "type": "STRING",
                              "value": "path parse"
                            },
                            {
                              "type": "STRING",
                              "value": "path relative-to"
                            },
                            {
                              "type": "STRING",
                              "value": "path split"
                            },
                            {
                              "type": "STRING",
                              "value": "path type"
                            },
                            {
                              "type": "STRING",
                              "value": "plugin add"
                            },
                            {
                              "type": "STRING",
                              "value": "plugin list"
                            },
                            {
                              "type": "STRING",
                              "value": "plugin rm"
                            },
                            {
                              "type": "STRING",
                              "value": "plugin stop"
                            },
                            {
                              "type": "STRING",
                              "value": "plugin use"
                            },
                            {
                              "type": "STRING",
                              "value": "polars agg"
                            },
                            {
                              "type": "STRING",
                              "value": "polars agg-groups"
                            },
                            {
                              "type": "STRING",
                              "value": "polars all-false"
                            },
                            {
                              "type": "STRING",
                              "value": "polars all-true"
                            },
                            {
                              "type": "STRING",
                              "value": "polars append"
                            },
                            {
                              "type": "STRING",
                              "value": "polars arg-max"
                            },
                            {
                              "type": "STRING",
                              "value": "polars arg-min"
                            },
                            {
                              "type": "STRING",
                              "value": "polars arg-sort"
                            },
                            {
                              "type": "STRING",
                              "value": "polars arg-true"
                            },
                            {
                              "type": "STRING",
                              "value": "polars arg-unique"
                            },
                            {
                              "type": "STRING",
                              "value": "polars arg-where"
                            },
                            {
                              "type": "STRING",
                              "value": "polars as"
                            },
                            {
                              "type": "STRING",
                              "value": "polars as-date"
                            },
                            {
                              "type": "STRING",
                              "value": "polars as-datetime"
                            },
                            {
                              "type": "STRING",
                              "value": "polars cache"
                            },
                            {
                              "type": "STRING",
                              "value": "polars cast"
                            },
                            {
                              "type": "STRING",
                              "value": "polars col"
                            },
                            {
                              "type": "STRING",
                              "value": "polars collect"
                            },
                            {
                              "type": "STRING",
                              "value": "polars columns"
                            },
                            {
                              "type": "STRING",
                              "value": "polars concat"
                            },
                            {
                              "type": "STRING",
                              "value": "polars concat-str"
                            },
                            {
                              "type": "STRING",
                              "value": "polars contains"
                            },
                            {
                              "type": "STRING",
                              "value": "polars count"
                            },
                            {
                              "type": "STRING",
                              "value": "polars count-null"
                            },
                            {
                              "type": "STRING",
                              "value": "polars cumulative"
                            },
                            {
                              "type": "STRING",
                              "value": "polars datepart"
                            },
                            {
                              "type": "STRING",
                              "value": "polars decimal"
                            },
                            {
                              "type": "STRING",
                              "value": "polars drop"
                            },
                            {
                              "type": "STRING",
                              "value": "polars drop-duplicates"
                            },
                            {
                              "type": "STRING",
                              "value": "polars drop-nulls"
                            },
                            {
                              "type": "STRING",
                              "value": "polars dummies"
                            },
                            {
                              "type": "STRING",
                              "value": "polars explode"
                            },
                            {
                              "type": "STRING",
                              "value": "polars expr-not"
                            },
                            {
                              "type": "STRING",
                              "value": "polars fetch"
                            },
                            {
                              "type": "STRING",
                              "value": "polars fill-nan"
                            },
                            {
                              "type": "STRING",
                              "value": "polars fill-null"
                            },
                            {
                              "type": "STRING",
                              "value": "polars filter"
                            },
                            {
                              "type": "STRING",
                              "value": "polars filter-with"
                            },
                            {
                              "type": "STRING",
                              "value": "polars first"
                            },
                            {
                              "type": "STRING",
                              "value": "polars flatten"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-day"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-hour"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-minute"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-month"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-nanosecond"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-ordinal"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-second"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-week"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-weekday"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-year"
                            },
                            {
                              "type": "STRING",
                              "value": "polars group-by"
                            },
                            {
                              "type": "STRING",
                              "value": "polars implode"
                            },
                            {
                              "type": "STRING",
                              "value": "polars integer"
                            },
                            {
                              "type": "STRING",
                              "value": "polars into-df"
                            },
                            {
                              "type": "STRING",
                              "value": "polars into-lazy"
                            },
                            {
                              "type": "STRING",
                              "value": "polars into-nu"
                            },
                            {
                              "type": "STRING",
                              "value": "polars is-duplicated"
                            },
                            {
                              "type": "STRING",
                              "value": "polars is-in"
                            },
                            {
                              "type": "STRING",
                              "value": "polars is-not-null"
                            },
                            {
                              "type": "STRING",
                              "value": "polars is-null"
                            },
                            {
                              "type": "STRING",
                              "value": "polars is-unique"
                            },
                            {
                              "type": "STRING",
                              "value": "polars join"
                            },
                            {
                              "type": "STRING",
                              "value": "polars last"
                            },
                            {
                              "type": "STRING",
                              "value": "polars len"
                            },
                            {
                              "type": "STRING",
                              "value": "polars lit"
                            },
                            {
                              "type": "STRING",
                              "value": "polars lowercase"
                            },
                            {
                              "type": "STRING",
                              "value": "polars max"
                            },
                            {
                              "type": "STRING",
                              "value": "polars mean"
                            },
                            {
                              "type": "STRING",
                              "value": "polars median"
                            },
                            {
                              "type": "STRING",
                              "value": "polars min"
                            },
                            {
                              "type": "STRING",
                              "value": "polars n-unique"
                            },
                            {
                              "type": "STRING",
                              "value": "polars not"
                            },
                            {
                              "type": "STRING",
                              "value": "polars open"
                            },
                            {
                              "type": "STRING",
                              "value": "polars otherwise"
                            },
                            {
                              "type": "STRING",
                              "value": "polars pivot"
                            },
                            {
                              "type": "STRING",
                              "value": "polars profile"
                            },
                            {
                              "type": "STRING",
                              "value": "polars quantile"
                            },
                            {
                              "type": "STRING",
                              "value": "polars query"
                            },
                            {
                              "type": "STRING",
                              "value": "polars rename"
                            },
                            {
                              "type": "STRING",
                              "value": "polars replace"
                            },
                            {
                              "type": "STRING",
                              "value": "polars replace-all"
                            },
                            {
                              "type": "STRING",
                              "value": "polars reverse"
                            },
                            {
                              "type": "STRING",
                              "value": "polars rolling"
                            },
                            {
                              "type": "STRING",
                              "value": "polars sample"
                            },
                            {
                              "type": "STRING",
                              "value": "polars save"
                            },
                            {
                              "type": "STRING",
                              "value": "polars schema"
                            },
                            {
                              "type": "STRING",
                              "value": "polars select"
                            },
                            {
                              "type": "STRING",
                              "value": "polars set"
                            },
                            {
                              "type": "STRING",
                              "value": "polars set-with-idx"
                            },
                            {
                              "type": "STRING",
                              "value": "polars shape"
                            },
                            {
                              "type": "STRING",
                              "value": "polars shift"
                            },
                            {
                              "type": "STRING",
                              "value": "polars slice"
                            },
                            {
                              "type": "STRING",
                              "value": "polars sort-by"
                            },
                            {
                              "type": "STRING",
                              "value": "polars std"
                            },
                            {
                              "type": "STRING",
                              "value": "polars store-get"
                            },
                            {
                              "type": "STRING",
                              "value": "polars store-ls"
                            },
                            {
                              "type": "STRING",
                              "value": "polars store-rm"
                            },
                            {
                              "type": "STRING",
                              "value": "polars str-join"
                            },
                            {
                              "type": "STRING",
                              "value": "polars str-lengths"
                            },
                            {
                              "type": "STRING",
                              "value": "polars str-slice"
                            },
                            {
                              "type": "STRING",
                              "value": "polars strftime"
                            },
                            {
                              "type": "STRING",
                              "value": "polars sum"
                            },
                            {
                              "type": "STRING",
                              "value": "polars summary"
                            },
                            {
                              "type": "STRING",
                              "value": "polars take"
                            },
                            {
                              "type": "STRING",
                              "value": "polars unique"
                            },
                            {
                              "type": "STRING",
                              "value": "polars unnest"
                            },
                            {
                              "type": "STRING",
                              "value": "polars unpivot"
                            },
                            {
                              "type": "STRING",
                              "value": "polars uppercase"
                            },
                            {
                              "type": "STRING",
                              "value": "polars value-counts"
                            },
                            {
                              "type": "STRING",
                              "value": "polars var"
                            },
                            {
                              "type": "STRING",
                              "value": "polars when"
                            },
                            {
                              "type": "STRING",
                              "value": "polars with-column"
                            },
                            {
                              "type": "STRING",
                              "value": "query db"
                            },
                            {
                              "type": "STRING",
                              "value": "query git"
                            },
                            {
                              "type": "STRING",
                              "value": "query json"
                            },
                            {
                              "type": "STRING",
                              "value": "query web"
                            },
                            {
                              "type": "STRING",
                              "value": "query webpage-info"
                            },
                            {
                              "type": "STRING",
                              "value": "query xml"
                            },
                            {
                              "type": "STRING",
                              "value": "random binary"
                            },
                            {
                              "type": "STRING",
                              "value": "random bool"
                            },
                            {
                              "type": "STRING",
                              "value": "random chars"
                            },
                            {
                              "type": "STRING",
                              "value": "random dice"
                            },
                            {
                              "type": "STRING",
                              "value": "random float"
                            },
                            {
                              "type": "STRING",
                              "value": "random int"
                            },
                            {
                              "type": "STRING",
                              "value": "random uuid"
                            },
                            {
                              "type": "STRING",
                              "value": "roll down"
                            },
                            {
                              "type": "STRING",
                              "value": "roll left"
                            },
                            {
                              "type": "STRING",
                              "value": "roll right"
                            },
                            {
                              "type": "STRING",
                              "value": "roll up"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup completions"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup completions cargo"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup completions rustup"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup component"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup component add"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup component remove"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup default"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup help"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup override"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup override set"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup override unset"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup run"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup self"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup set"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup set auto-self-update"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup set profile"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup target"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup target add"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup target remove"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup toolchain"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup toolchain install"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup toolchain uninstall"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup update"
                            },
                            {
                              "type": "STRING",
                              "value": "scope aliases"
                            },
                            {
                              "type": "STRING",
                              "value": "scope commands"
                            },
                            {
                              "type": "STRING",
                              "value": "scope engine-stats"
                            },
                            {
                              "type": "STRING",
                              "value": "scope externs"
                            },
                            {
                              "type": "STRING",
                              "value": "scope modules"
                            },
                            {
                              "type": "STRING",
                              "value": "scope variables"
                            },
                            {
                              "type": "STRING",
                              "value": "seq char"
                            },
                            {
                              "type": "STRING",
                              "value": "seq date"
                            },
                            {
                              "type": "STRING",
                              "value": "skip until"
                            },
                            {
                              "type": "STRING",
                              "value": "skip while"
                            },
                            {
                              "type": "STRING",
                              "value": "split cell-path"
                            },
                            {
                              "type": "STRING",
                              "value": "split chars"
                            },
                            {
                              "type": "STRING",
                              "value": "split column"
                            },
                            {
                              "type": "STRING",
                              "value": "split list"
                            },
                            {
                              "type": "STRING",
                              "value": "split row"
                            },
                            {
                              "type": "STRING",
                              "value": "split words"
                            },
                            {
                              "type": "STRING",
                              "value": "stor create"
                            },
                            {
                              "type": "STRING",
                              "value": "stor delete"
                            },
                            {
                              "type": "STRING",
                              "value": "stor export"
                            },
                            {
                              "type": "STRING",
                              "value": "stor import"
                            },
                            {
                              "type": "STRING",
                              "value": "stor insert"
                            },
                            {
                              "type": "STRING",
                              "value": "stor open"
                            },
                            {
                              "type": "STRING",
                              "value": "stor reset"
                            },
                            {
                              "type": "STRING",
                              "value": "stor update"
                            },
                            {
                              "type": "STRING",
                              "value": "str bexpand"
                            },
                            {
                              "type": "STRING",
                              "value": "str camel-case"
                            },
                            {
                              "type": "STRING",
                              "value": "str capitalize"
                            },
                            {
                              "type": "STRING",
                              "value": "str compress"
                            },
                            {
                              "type": "STRING",
                              "value": "str contains"
                            },
                            {
                              "type": "STRING",
                              "value": "str decompress"
                            },
                            {
                              "type": "STRING",
                              "value": "str dedent"
                            },
                            {
                              "type": "STRING",
                              "value": "str deunicode"
                            },
                            {
                              "type": "STRING",
                              "value": "str distance"
                            },
                            {
                              "type": "STRING",
                              "value": "str downcase"
                            },
                            {
                              "type": "STRING",
                              "value": "str ends-with"
                            },
                            {
                              "type": "STRING",
                              "value": "str expand"
                            },
                            {
                              "type": "STRING",
                              "value": "str indent"
                            },
                            {
                              "type": "STRING",
                              "value": "str index-of"
                            },
                            {
                              "type": "STRING",
                              "value": "str join"
                            },
                            {
                              "type": "STRING",
                              "value": "str kebab-case"
                            },
                            {
                              "type": "STRING",
                              "value": "str length"
                            },
                            {
                              "type": "STRING",
                              "value": "str pascal-case"
                            },
                            {
                              "type": "STRING",
                              "value": "str replace"
                            },
                            {
                              "type": "STRING",
                              "value": "str reverse"
                            },
                            {
                              "type": "STRING",
                              "value": "str screaming-snake-case"
                            },
                            {
                              "type": "STRING",
                              "value": "str similarity"
                            },
                            {
                              "type": "STRING",
                              "value": "str snake-case"
                            },
                            {
                              "type": "STRING",
                              "value": "str starts-with"
                            },
                            {
                              "type": "STRING",
                              "value": "str stats"
                            },
                            {
                              "type": "STRING",
                              "value": "str substring"
                            },
                            {
                              "type": "STRING",
                              "value": "str title-case"
                            },
                            {
                              "type": "STRING",
                              "value": "str trim"
                            },
                            {
                              "type": "STRING",
                              "value": "str upcase"
                            },
                            {
                              "type": "STRING",
                              "value": "str wrap"
                            },
                            {
                              "type": "STRING",
                              "value": "sys cpu"
                            },
                            {
                              "type": "STRING",
                              "value": "sys disks"
                            },
                            {
                              "type": "STRING",
                              "value": "sys host"
                            },
                            {
                              "type": "STRING",
                              "value": "sys mem"
                            },
                            {
                              "type": "STRING",
                              "value": "sys net"
                            },
                            {
                              "type": "STRING",
                              "value": "sys temp"
                            },
                            {
                              "type": "STRING",
                              "value": "sys users"
                            },
                            {
                              "type": "STRING",
                              "value": "take until"
                            },
                            {
                              "type": "STRING",
                              "value": "take while"
                            },
                            {
                              "type": "STRING",
                              "value": "term query"
                            },
                            {
                              "type": "STRING",
                              "value": "term size"
                            },
                            {
                              "type": "STRING",
                              "value": "to bz2"
                            },
                            {
                              "type": "STRING",
                              "value": "to csv"
                            },
                            {
                              "type": "STRING",
                              "value": "to gz"
                            },
                            {
                              "type": "STRING",
                              "value": "to html"
                            },
                            {
                              "type": "STRING",
                              "value": "to json"
                            },
                            {
                              "type": "STRING",
                              "value": "to md"
                            },
                            {
                              "type": "STRING",
                              "value": "to msgpack"
                            },
                            {
                              "type": "STRING",
                              "value": "to msgpackz"
                            },
                            {
                              "type": "STRING",
                              "value": "to nuon"
                            },
                            {
                              "type": "STRING",
                              "value": "to parquet"
                            },
                            {
                              "type": "STRING",
                              "value": "to plist"
                            },
                            {
                              "type": "STRING",
                              "value": "to png"
                            },
                            {
                              "type": "STRING",
                              "value": "to text"
                            },
                            {
                              "type": "STRING",
                              "value": "to toml"
                            },
                            {
                              "type": "STRING",
                              "value": "to tsv"
                            },
                            {
                              "type": "STRING",
                              "value": "to xml"
                            },
                            {
                              "type": "STRING",
                              "value": "to xz"
                            },
                            {
                              "type": "STRING",
                              "value": "to yaml"
                            },
                            {
                              "type": "STRING",
                              "value": "to zst"
                            },
                            {
                              "type": "STRING",
                              "value": "update cells"
                            },
                            {
                              "type": "STRING",
                              "value": "url build-query"
                            },
                            {
                              "type": "STRING",
                              "value": "url decode"
                            },
                            {
                              "type": "STRING",
                              "value": "url encode"
                            },
                            {
                              "type": "STRING",
                              "value": "url join"
                            },
                            {
                              "type": "STRING",
                              "value": "url parse"
                            },
                            {
                              "type": "STRING",
                              "value": "url split-query"
                            },
                            {
                              "type": "STRING",
                              "value": "view files"
                            },
                            {
                              "type": "STRING",
                              "value": "view ir"
                            },
                            {
                              "type": "STRING",
                              "value": "view source"
                            },
                            {
                              "type": "STRING",
                              "value": "view span"
                            }
                          ]
                        },
                        {
                          "type": "PATTERN",
                          "value": "[_a-zA-Z-]*"
                        }
                      ]
                    }
                  },
                  "named": true,
                  "value": "cmd_identifier"
                }
              }
            ]
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_space"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_cmd_arg"
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "_command_parenthesized": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "FIELD",
                "name": "head",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "CHOICE",
                      "members": [
                        {
                          "type": "STRING",
                          "value": "^"
                        },
                        {
                          "type": "BLANK"
                        }
                      ]
                    },
                    {
                      "type": "SYMBOL",
                      "name": "cmd_identifier"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "head",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "^"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_stringish"
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "head",
                "content": {
                  "type": "ALIAS",
                  "content": {
                    "type": "TOKEN",
                    "content": {
                      "type": "SEQ",
                      "members": [
                        {
                          "type": "CHOICE",
                          "members": [
                            {
                              "type": "STRING",
                              "value": "ansi gradient"
                            },
                            {
                              "type": "STRING",
                              "value": "ansi link"
                            },
                            {
                              "type": "STRING",
                              "value": "ansi strip"
                            },
                            {
                              "type": "STRING",
                              "value": "bits and"
                            },
                            {
                              "type": "STRING",
                              "value": "bits not"
                            },
                            {
                              "type": "STRING",
                              "value": "bits or"
                            },
                            {
                              "type": "STRING",
                              "value": "bits rol"
                            },
                            {
                              "type": "STRING",
                              "value": "bits ror"
                            },
                            {
                              "type": "STRING",
                              "value": "bits shl"
                            },
                            {
                              "type": "STRING",
                              "value": "bits shr"
                            },
                            {
                              "type": "STRING",
                              "value": "bits xor"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes add"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes at"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes build"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes collect"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes ends-with"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes index-of"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes length"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes remove"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes replace"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes reverse"
                            },
                            {
                              "type": "STRING",
                              "value": "bytes starts-with"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo add"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo bench"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo build"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo check"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo clean"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo clippy"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo doc"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo help"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo init"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo install"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo install-update"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo metadata"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo new"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo publish"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo run"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo search"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo test"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo uninstall"
                            },
                            {
                              "type": "STRING",
                              "value": "cargo update"
                            },
                            {
                              "type": "STRING",
                              "value": "commandline edit"
                            },
                            {
                              "type": "STRING",
                              "value": "commandline get-cursor"
                            },
                            {
                              "type": "STRING",
                              "value": "commandline set-cursor"
                            },
                            {
                              "type": "STRING",
                              "value": "config env"
                            },
                            {
                              "type": "STRING",
                              "value": "config nu"
                            },
                            {
                              "type": "STRING",
                              "value": "config reset"
                            },
                            {
                              "type": "STRING",
                              "value": "date format"
                            },
                            {
                              "type": "STRING",
                              "value": "date humanize"
                            },
                            {
                              "type": "STRING",
                              "value": "date list-timezone"
                            },
                            {
                              "type": "STRING",
                              "value": "date now"
                            },
                            {
                              "type": "STRING",
                              "value": "date to-record"
                            },
                            {
                              "type": "STRING",
                              "value": "date to-table"
                            },
                            {
                              "type": "STRING",
                              "value": "date to-timezone"
                            },
                            {
                              "type": "STRING",
                              "value": "debug info"
                            },
                            {
                              "type": "STRING",
                              "value": "debug profile"
                            },
                            {
                              "type": "STRING",
                              "value": "decode base32"
                            },
                            {
                              "type": "STRING",
                              "value": "decode base32hex"
                            },
                            {
                              "type": "STRING",
                              "value": "decode base64"
                            },
                            {
                              "type": "STRING",
                              "value": "decode hex"
                            },
                            {
                              "type": "STRING",
                              "value": "detect columns"
                            },
                            {
                              "type": "STRING",
                              "value": "drop column"
                            },
                            {
                              "type": "STRING",
                              "value": "drop nth"
                            },
                            {
                              "type": "STRING",
                              "value": "dt add"
                            },
                            {
                              "type": "STRING",
                              "value": "dt diff"
                            },
                            {
                              "type": "STRING",
                              "value": "dt format"
                            },
                            {
                              "type": "STRING",
                              "value": "dt now"
                            },
                            {
                              "type": "STRING",
                              "value": "dt part"
                            },
                            {
                              "type": "STRING",
                              "value": "dt to"
                            },
                            {
                              "type": "STRING",
                              "value": "dt utcnow"
                            },
                            {
                              "type": "STRING",
                              "value": "each while"
                            },
                            {
                              "type": "STRING",
                              "value": "encode base32"
                            },
                            {
                              "type": "STRING",
                              "value": "encode base32hex"
                            },
                            {
                              "type": "STRING",
                              "value": "encode base64"
                            },
                            {
                              "type": "STRING",
                              "value": "encode hex"
                            },
                            {
                              "type": "STRING",
                              "value": "explore ir"
                            },
                            {
                              "type": "STRING",
                              "value": "format date"
                            },
                            {
                              "type": "STRING",
                              "value": "format duration"
                            },
                            {
                              "type": "STRING",
                              "value": "format filesize"
                            },
                            {
                              "type": "STRING",
                              "value": "format pattern"
                            },
                            {
                              "type": "STRING",
                              "value": "from bz2"
                            },
                            {
                              "type": "STRING",
                              "value": "from csv"
                            },
                            {
                              "type": "STRING",
                              "value": "from eml"
                            },
                            {
                              "type": "STRING",
                              "value": "from gz"
                            },
                            {
                              "type": "STRING",
                              "value": "from ics"
                            },
                            {
                              "type": "STRING",
                              "value": "from ini"
                            },
                            {
                              "type": "STRING",
                              "value": "from json"
                            },
                            {
                              "type": "STRING",
                              "value": "from msgpack"
                            },
                            {
                              "type": "STRING",
                              "value": "from msgpackz"
                            },
                            {
                              "type": "STRING",
                              "value": "from nuon"
                            },
                            {
                              "type": "STRING",
                              "value": "from ods"
                            },
                            {
                              "type": "STRING",
                              "value": "from parquet"
                            },
                            {
                              "type": "STRING",
                              "value": "from plist"
                            },
                            {
                              "type": "STRING",
                              "value": "from png"
                            },
                            {
                              "type": "STRING",
                              "value": "from ssv"
                            },
                            {
                              "type": "STRING",
                              "value": "from toml"
                            },
                            {
                              "type": "STRING",
                              "value": "from tsv"
                            },
                            {
                              "type": "STRING",
                              "value": "from url"
                            },
                            {
                              "type": "STRING",
                              "value": "from vcf"
                            },
                            {
                              "type": "STRING",
                              "value": "from xlsx"
                            },
                            {
                              "type": "STRING",
                              "value": "from xml"
                            },
                            {
                              "type": "STRING",
                              "value": "from xz"
                            },
                            {
                              "type": "STRING",
                              "value": "from yaml"
                            },
                            {
                              "type": "STRING",
                              "value": "from yml"
                            },
                            {
                              "type": "STRING",
                              "value": "from zst"
                            },
                            {
                              "type": "STRING",
                              "value": "gh alias"
                            },
                            {
                              "type": "STRING",
                              "value": "gh api"
                            },
                            {
                              "type": "STRING",
                              "value": "gh auth"
                            },
                            {
                              "type": "STRING",
                              "value": "gh browse"
                            },
                            {
                              "type": "STRING",
                              "value": "gh cache"
                            },
                            {
                              "type": "STRING",
                              "value": "gh codespace"
                            },
                            {
                              "type": "STRING",
                              "value": "gh completion"
                            },
                            {
                              "type": "STRING",
                              "value": "gh config"
                            },
                            {
                              "type": "STRING",
                              "value": "gh extension"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist clone"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist create"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist delete"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist edit"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist list"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist rename"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gist view"
                            },
                            {
                              "type": "STRING",
                              "value": "gh gpg-key"
                            },
                            {
                              "type": "STRING",
                              "value": "gh issue"
                            },
                            {
                              "type": "STRING",
                              "value": "gh label"
                            },
                            {
                              "type": "STRING",
                              "value": "gh org"
                            },
                            {
                              "type": "STRING",
                              "value": "gh pr"
                            },
                            {
                              "type": "STRING",
                              "value": "gh pr checkout"
                            },
                            {
                              "type": "STRING",
                              "value": "gh project"
                            },
                            {
                              "type": "STRING",
                              "value": "gh release"
                            },
                            {
                              "type": "STRING",
                              "value": "gh repo"
                            },
                            {
                              "type": "STRING",
                              "value": "gh repo clone"
                            },
                            {
                              "type": "STRING",
                              "value": "gh repo create"
                            },
                            {
                              "type": "STRING",
                              "value": "gh repo fork"
                            },
                            {
                              "type": "STRING",
                              "value": "gh repo list"
                            },
                            {
                              "type": "STRING",
                              "value": "gh repo view"
                            },
                            {
                              "type": "STRING",
                              "value": "gh ruleset"
                            },
                            {
                              "type": "STRING",
                              "value": "gh run"
                            },
                            {
                              "type": "STRING",
                              "value": "gh search"
                            },
                            {
                              "type": "STRING",
                              "value": "gh secret"
                            },
                            {
                              "type": "STRING",
                              "value": "gh ssh-key"
                            },
                            {
                              "type": "STRING",
                              "value": "gh status"
                            },
                            {
                              "type": "STRING",
                              "value": "gh variable"
                            },
                            {
                              "type": "STRING",
                              "value": "gh workflow"
                            },
                            {
                              "type": "STRING",
                              "value": "git add"
                            },
                            {
                              "type": "STRING",
                              "value": "git bisect bad"
                            },
                            {
                              "type": "STRING",
                              "value": "git bisect good"
                            },
                            {
                              "type": "STRING",
                              "value": "git bisect reset"
                            },
                            {
                              "type": "STRING",
                              "value": "git bisect skip"
                            },
                            {
                              "type": "STRING",
                              "value": "git bisect start"
                            },
                            {
                              "type": "STRING",
                              "value": "git branch"
                            },
                            {
                              "type": "STRING",
                              "value": "git checkout"
                            },
                            {
                              "type": "STRING",
                              "value": "git cherry-pick"
                            },
                            {
                              "type": "STRING",
                              "value": "git clone"
                            },
                            {
                              "type": "STRING",
                              "value": "git commit"
                            },
                            {
                              "type": "STRING",
                              "value": "git diff"
                            },
                            {
                              "type": "STRING",
                              "value": "git fetch"
                            },
                            {
                              "type": "STRING",
                              "value": "git grep"
                            },
                            {
                              "type": "STRING",
                              "value": "git help"
                            },
                            {
                              "type": "STRING",
                              "value": "git init"
                            },
                            {
                              "type": "STRING",
                              "value": "git log"
                            },
                            {
                              "type": "STRING",
                              "value": "git prune"
                            },
                            {
                              "type": "STRING",
                              "value": "git pull"
                            },
                            {
                              "type": "STRING",
                              "value": "git push"
                            },
                            {
                              "type": "STRING",
                              "value": "git rebase"
                            },
                            {
                              "type": "STRING",
                              "value": "git reflog"
                            },
                            {
                              "type": "STRING",
                              "value": "git remote"
                            },
                            {
                              "type": "STRING",
                              "value": "git remote add"
                            },
                            {
                              "type": "STRING",
                              "value": "git remote get-url"
                            },
                            {
                              "type": "STRING",
                              "value": "git remote remove"
                            },
                            {
                              "type": "STRING",
                              "value": "git remote rename"
                            },
                            {
                              "type": "STRING",
                              "value": "git remote set-url"
                            },
                            {
                              "type": "STRING",
                              "value": "git restore"
                            },
                            {
                              "type": "STRING",
                              "value": "git rm"
                            },
                            {
                              "type": "STRING",
                              "value": "git stash drop"
                            },
                            {
                              "type": "STRING",
                              "value": "git stash list"
                            },
                            {
                              "type": "STRING",
                              "value": "git stash pop"
                            },
                            {
                              "type": "STRING",
                              "value": "git stash push"
                            },
                            {
                              "type": "STRING",
                              "value": "git stash show"
                            },
                            {
                              "type": "STRING",
                              "value": "git status"
                            },
                            {
                              "type": "STRING",
                              "value": "git switch"
                            },
                            {
                              "type": "STRING",
                              "value": "git tag"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree add"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree list"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree lock"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree move"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree prune"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree remove"
                            },
                            {
                              "type": "STRING",
                              "value": "git worktree unlock"
                            },
                            {
                              "type": "STRING",
                              "value": "hash md5"
                            },
                            {
                              "type": "STRING",
                              "value": "hash sha256"
                            },
                            {
                              "type": "STRING",
                              "value": "help aliases"
                            },
                            {
                              "type": "STRING",
                              "value": "help commands"
                            },
                            {
                              "type": "STRING",
                              "value": "help escapes"
                            },
                            {
                              "type": "STRING",
                              "value": "help externs"
                            },
                            {
                              "type": "STRING",
                              "value": "help modules"
                            },
                            {
                              "type": "STRING",
                              "value": "help operators"
                            },
                            {
                              "type": "STRING",
                              "value": "history import"
                            },
                            {
                              "type": "STRING",
                              "value": "history session"
                            },
                            {
                              "type": "STRING",
                              "value": "http delete"
                            },
                            {
                              "type": "STRING",
                              "value": "http get"
                            },
                            {
                              "type": "STRING",
                              "value": "http head"
                            },
                            {
                              "type": "STRING",
                              "value": "http options"
                            },
                            {
                              "type": "STRING",
                              "value": "http patch"
                            },
                            {
                              "type": "STRING",
                              "value": "http post"
                            },
                            {
                              "type": "STRING",
                              "value": "http put"
                            },
                            {
                              "type": "STRING",
                              "value": "input list"
                            },
                            {
                              "type": "STRING",
                              "value": "input listen"
                            },
                            {
                              "type": "STRING",
                              "value": "into binary"
                            },
                            {
                              "type": "STRING",
                              "value": "into bits"
                            },
                            {
                              "type": "STRING",
                              "value": "into bool"
                            },
                            {
                              "type": "STRING",
                              "value": "into cell-path"
                            },
                            {
                              "type": "STRING",
                              "value": "into datetime"
                            },
                            {
                              "type": "STRING",
                              "value": "into duration"
                            },
                            {
                              "type": "STRING",
                              "value": "into filesize"
                            },
                            {
                              "type": "STRING",
                              "value": "into float"
                            },
                            {
                              "type": "STRING",
                              "value": "into glob"
                            },
                            {
                              "type": "STRING",
                              "value": "into int"
                            },
                            {
                              "type": "STRING",
                              "value": "into record"
                            },
                            {
                              "type": "STRING",
                              "value": "into sqlite"
                            },
                            {
                              "type": "STRING",
                              "value": "into string"
                            },
                            {
                              "type": "STRING",
                              "value": "into value"
                            },
                            {
                              "type": "STRING",
                              "value": "json path"
                            },
                            {
                              "type": "STRING",
                              "value": "keybindings default"
                            },
                            {
                              "type": "STRING",
                              "value": "keybindings list"
                            },
                            {
                              "type": "STRING",
                              "value": "keybindings listen"
                            },
                            {
                              "type": "STRING",
                              "value": "math abs"
                            },
                            {
                              "type": "STRING",
                              "value": "math arccos"
                            },
                            {
                              "type": "STRING",
                              "value": "math arccosh"
                            },
                            {
                              "type": "STRING",
                              "value": "math arcsin"
                            },
                            {
                              "type": "STRING",
                              "value": "math arcsinh"
                            },
                            {
                              "type": "STRING",
                              "value": "math arctan"
                            },
                            {
                              "type": "STRING",
                              "value": "math arctanh"
                            },
                            {
                              "type": "STRING",
                              "value": "math avg"
                            },
                            {
                              "type": "STRING",
                              "value": "math ceil"
                            },
                            {
                              "type": "STRING",
                              "value": "math cos"
                            },
                            {
                              "type": "STRING",
                              "value": "math cosh"
                            },
                            {
                              "type": "STRING",
                              "value": "math exp"
                            },
                            {
                              "type": "STRING",
                              "value": "math floor"
                            },
                            {
                              "type": "STRING",
                              "value": "math ln"
                            },
                            {
                              "type": "STRING",
                              "value": "math log"
                            },
                            {
                              "type": "STRING",
                              "value": "math max"
                            },
                            {
                              "type": "STRING",
                              "value": "math median"
                            },
                            {
                              "type": "STRING",
                              "value": "math min"
                            },
                            {
                              "type": "STRING",
                              "value": "math mode"
                            },
                            {
                              "type": "STRING",
                              "value": "math product"
                            },
                            {
                              "type": "STRING",
                              "value": "math round"
                            },
                            {
                              "type": "STRING",
                              "value": "math sin"
                            },
                            {
                              "type": "STRING",
                              "value": "math sinh"
                            },
                            {
                              "type": "STRING",
                              "value": "math sqrt"
                            },
                            {
                              "type": "STRING",
                              "value": "math stddev"
                            },
                            {
                              "type": "STRING",
                              "value": "math sum"
                            },
                            {
                              "type": "STRING",
                              "value": "math tan"
                            },
                            {
                              "type": "STRING",
                              "value": "math tanh"
                            },
                            {
                              "type": "STRING",
                              "value": "math variance"
                            },
                            {
                              "type": "STRING",
                              "value": "metadata access"
                            },
                            {
                              "type": "STRING",
                              "value": "metadata set"
                            },
                            {
                              "type": "STRING",
                              "value": "path basename"
                            },
                            {
                              "type": "STRING",
                              "value": "path dirname"
                            },
                            {
                              "type": "STRING",
                              "value": "path exists"
                            },
                            {
                              "type": "STRING",
                              "value": "path expand"
                            },
                            {
                              "type": "STRING",
                              "value": "path join"
                            },
                            {
                              "type": "STRING",
                              "value": "path parse"
                            },
                            {
                              "type": "STRING",
                              "value": "path relative-to"
                            },
                            {
                              "type": "STRING",
                              "value": "path split"
                            },
                            {
                              "type": "STRING",
                              "value": "path type"
                            },
                            {
                              "type": "STRING",
                              "value": "plugin add"
                            },
                            {
                              "type": "STRING",
                              "value": "plugin list"
                            },
                            {
                              "type": "STRING",
                              "value": "plugin rm"
                            },
                            {
                              "type": "STRING",
                              "value": "plugin stop"
                            },
                            {
                              "type": "STRING",
                              "value": "plugin use"
                            },
                            {
                              "type": "STRING",
                              "value": "polars agg"
                            },
                            {
                              "type": "STRING",
                              "value": "polars agg-groups"
                            },
                            {
                              "type": "STRING",
                              "value": "polars all-false"
                            },
                            {
                              "type": "STRING",
                              "value": "polars all-true"
                            },
                            {
                              "type": "STRING",
                              "value": "polars append"
                            },
                            {
                              "type": "STRING",
                              "value": "polars arg-max"
                            },
                            {
                              "type": "STRING",
                              "value": "polars arg-min"
                            },
                            {
                              "type": "STRING",
                              "value": "polars arg-sort"
                            },
                            {
                              "type": "STRING",
                              "value": "polars arg-true"
                            },
                            {
                              "type": "STRING",
                              "value": "polars arg-unique"
                            },
                            {
                              "type": "STRING",
                              "value": "polars arg-where"
                            },
                            {
                              "type": "STRING",
                              "value": "polars as"
                            },
                            {
                              "type": "STRING",
                              "value": "polars as-date"
                            },
                            {
                              "type": "STRING",
                              "value": "polars as-datetime"
                            },
                            {
                              "type": "STRING",
                              "value": "polars cache"
                            },
                            {
                              "type": "STRING",
                              "value": "polars cast"
                            },
                            {
                              "type": "STRING",
                              "value": "polars col"
                            },
                            {
                              "type": "STRING",
                              "value": "polars collect"
                            },
                            {
                              "type": "STRING",
                              "value": "polars columns"
                            },
                            {
                              "type": "STRING",
                              "value": "polars concat"
                            },
                            {
                              "type": "STRING",
                              "value": "polars concat-str"
                            },
                            {
                              "type": "STRING",
                              "value": "polars contains"
                            },
                            {
                              "type": "STRING",
                              "value": "polars count"
                            },
                            {
                              "type": "STRING",
                              "value": "polars count-null"
                            },
                            {
                              "type": "STRING",
                              "value": "polars cumulative"
                            },
                            {
                              "type": "STRING",
                              "value": "polars datepart"
                            },
                            {
                              "type": "STRING",
                              "value": "polars decimal"
                            },
                            {
                              "type": "STRING",
                              "value": "polars drop"
                            },
                            {
                              "type": "STRING",
                              "value": "polars drop-duplicates"
                            },
                            {
                              "type": "STRING",
                              "value": "polars drop-nulls"
                            },
                            {
                              "type": "STRING",
                              "value": "polars dummies"
                            },
                            {
                              "type": "STRING",
                              "value": "polars explode"
                            },
                            {
                              "type": "STRING",
                              "value": "polars expr-not"
                            },
                            {
                              "type": "STRING",
                              "value": "polars fetch"
                            },
                            {
                              "type": "STRING",
                              "value": "polars fill-nan"
                            },
                            {
                              "type": "STRING",
                              "value": "polars fill-null"
                            },
                            {
                              "type": "STRING",
                              "value": "polars filter"
                            },
                            {
                              "type": "STRING",
                              "value": "polars filter-with"
                            },
                            {
                              "type": "STRING",
                              "value": "polars first"
                            },
                            {
                              "type": "STRING",
                              "value": "polars flatten"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-day"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-hour"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-minute"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-month"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-nanosecond"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-ordinal"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-second"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-week"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-weekday"
                            },
                            {
                              "type": "STRING",
                              "value": "polars get-year"
                            },
                            {
                              "type": "STRING",
                              "value": "polars group-by"
                            },
                            {
                              "type": "STRING",
                              "value": "polars implode"
                            },
                            {
                              "type": "STRING",
                              "value": "polars integer"
                            },
                            {
                              "type": "STRING",
                              "value": "polars into-df"
                            },
                            {
                              "type": "STRING",
                              "value": "polars into-lazy"
                            },
                            {
                              "type": "STRING",
                              "value": "polars into-nu"
                            },
                            {
                              "type": "STRING",
                              "value": "polars is-duplicated"
                            },
                            {
                              "type": "STRING",
                              "value": "polars is-in"
                            },
                            {
                              "type": "STRING",
                              "value": "polars is-not-null"
                            },
                            {
                              "type": "STRING",
                              "value": "polars is-null"
                            },
                            {
                              "type": "STRING",
                              "value": "polars is-unique"
                            },
                            {
                              "type": "STRING",
                              "value": "polars join"
                            },
                            {
                              "type": "STRING",
                              "value": "polars last"
                            },
                            {
                              "type": "STRING",
                              "value": "polars len"
                            },
                            {
                              "type": "STRING",
                              "value": "polars lit"
                            },
                            {
                              "type": "STRING",
                              "value": "polars lowercase"
                            },
                            {
                              "type": "STRING",
                              "value": "polars max"
                            },
                            {
                              "type": "STRING",
                              "value": "polars mean"
                            },
                            {
                              "type": "STRING",
                              "value": "polars median"
                            },
                            {
                              "type": "STRING",
                              "value": "polars min"
                            },
                            {
                              "type": "STRING",
                              "value": "polars n-unique"
                            },
                            {
                              "type": "STRING",
                              "value": "polars not"
                            },
                            {
                              "type": "STRING",
                              "value": "polars open"
                            },
                            {
                              "type": "STRING",
                              "value": "polars otherwise"
                            },
                            {
                              "type": "STRING",
                              "value": "polars pivot"
                            },
                            {
                              "type": "STRING",
                              "value": "polars profile"
                            },
                            {
                              "type": "STRING",
                              "value": "polars quantile"
                            },
                            {
                              "type": "STRING",
                              "value": "polars query"
                            },
                            {
                              "type": "STRING",
                              "value": "polars rename"
                            },
                            {
                              "type": "STRING",
                              "value": "polars replace"
                            },
                            {
                              "type": "STRING",
                              "value": "polars replace-all"
                            },
                            {
                              "type": "STRING",
                              "value": "polars reverse"
                            },
                            {
                              "type": "STRING",
                              "value": "polars rolling"
                            },
                            {
                              "type": "STRING",
                              "value": "polars sample"
                            },
                            {
                              "type": "STRING",
                              "value": "polars save"
                            },
                            {
                              "type": "STRING",
                              "value": "polars schema"
                            },
                            {
                              "type": "STRING",
                              "value": "polars select"
                            },
                            {
                              "type": "STRING",
                              "value": "polars set"
                            },
                            {
                              "type": "STRING",
                              "value": "polars set-with-idx"
                            },
                            {
                              "type": "STRING",
                              "value": "polars shape"
                            },
                            {
                              "type": "STRING",
                              "value": "polars shift"
                            },
                            {
                              "type": "STRING",
                              "value": "polars slice"
                            },
                            {
                              "type": "STRING",
                              "value": "polars sort-by"
                            },
                            {
                              "type": "STRING",
                              "value": "polars std"
                            },
                            {
                              "type": "STRING",
                              "value": "polars store-get"
                            },
                            {
                              "type": "STRING",
                              "value": "polars store-ls"
                            },
                            {
                              "type": "STRING",
                              "value": "polars store-rm"
                            },
                            {
                              "type": "STRING",
                              "value": "polars str-join"
                            },
                            {
                              "type": "STRING",
                              "value": "polars str-lengths"
                            },
                            {
                              "type": "STRING",
                              "value": "polars str-slice"
                            },
                            {
                              "type": "STRING",
                              "value": "polars strftime"
                            },
                            {
                              "type": "STRING",
                              "value": "polars sum"
                            },
                            {
                              "type": "STRING",
                              "value": "polars summary"
                            },
                            {
                              "type": "STRING",
                              "value": "polars take"
                            },
                            {
                              "type": "STRING",
                              "value": "polars unique"
                            },
                            {
                              "type": "STRING",
                              "value": "polars unnest"
                            },
                            {
                              "type": "STRING",
                              "value": "polars unpivot"
                            },
                            {
                              "type": "STRING",
                              "value": "polars uppercase"
                            },
                            {
                              "type": "STRING",
                              "value": "polars value-counts"
                            },
                            {
                              "type": "STRING",
                              "value": "polars var"
                            },
                            {
                              "type": "STRING",
                              "value": "polars when"
                            },
                            {
                              "type": "STRING",
                              "value": "polars with-column"
                            },
                            {
                              "type": "STRING",
                              "value": "query db"
                            },
                            {
                              "type": "STRING",
                              "value": "query git"
                            },
                            {
                              "type": "STRING",
                              "value": "query json"
                            },
                            {
                              "type": "STRING",
                              "value": "query web"
                            },
                            {
                              "type": "STRING",
                              "value": "query webpage-info"
                            },
                            {
                              "type": "STRING",
                              "value": "query xml"
                            },
                            {
                              "type": "STRING",
                              "value": "random binary"
                            },
                            {
                              "type": "STRING",
                              "value": "random bool"
                            },
                            {
                              "type": "STRING",
                              "value": "random chars"
                            },
                            {
                              "type": "STRING",
                              "value": "random dice"
                            },
                            {
                              "type": "STRING",
                              "value": "random float"
                            },
                            {
                              "type": "STRING",
                              "value": "random int"
                            },
                            {
                              "type": "STRING",
                              "value": "random uuid"
                            },
                            {
                              "type": "STRING",
                              "value": "roll down"
                            },
                            {
                              "type": "STRING",
                              "value": "roll left"
                            },
                            {
                              "type": "STRING",
                              "value": "roll right"
                            },
                            {
                              "type": "STRING",
                              "value": "roll up"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup completions"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup completions cargo"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup completions rustup"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup component"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup component add"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup component remove"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup default"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup help"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup override"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup override set"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup override unset"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup run"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup self"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup set"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup set auto-self-update"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup set profile"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup target"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup target add"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup target remove"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup toolchain"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup toolchain install"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup toolchain uninstall"
                            },
                            {
                              "type": "STRING",
                              "value": "rustup update"
                            },
                            {
                              "type": "STRING",
                              "value": "scope aliases"
                            },
                            {
                              "type": "STRING",
                              "value": "scope commands"
                            },
                            {
                              "type": "STRING",
                              "value": "scope engine-stats"
                            },
                            {
                              "type": "STRING",
                              "value": "scope externs"
                            },
                            {
                              "type": "STRING",
                              "value": "scope modules"
                            },
                            {
                              "type": "STRING",
                              "value": "scope variables"
                            },
                            {
                              "type": "STRING",
                              "value": "seq char"
                            },
                            {
                              "type": "STRING",
                              "value": "seq date"
                            },
                            {
                              "type": "STRING",
                              "value": "skip until"
                            },
                            {
                              "type": "STRING",
                              "value": "skip while"
                            },
                            {
                              "type": "STRING",
                              "value": "split cell-path"
                            },
                            {
                              "type": "STRING",
                              "value": "split chars"
                            },
                            {
                              "type": "STRING",
                              "value": "split column"
                            },
                            {
                              "type": "STRING",
                              "value": "split list"
                            },
                            {
                              "type": "STRING",
                              "value": "split row"
                            },
                            {
                              "type": "STRING",
                              "value": "split words"
                            },
                            {
                              "type": "STRING",
                              "value": "stor create"
                            },
                            {
                              "type": "STRING",
                              "value": "stor delete"
                            },
                            {
                              "type": "STRING",
                              "value": "stor export"
                            },
                            {
                              "type": "STRING",
                              "value": "stor import"
                            },
                            {
                              "type": "STRING",
                              "value": "stor insert"
                            },
                            {
                              "type": "STRING",
                              "value": "stor open"
                            },
                            {
                              "type": "STRING",
                              "value": "stor reset"
                            },
                            {
                              "type": "STRING",
                              "value": "stor update"
                            },
                            {
                              "type": "STRING",
                              "value": "str bexpand"
                            },
                            {
                              "type": "STRING",
                              "value": "str camel-case"
                            },
                            {
                              "type": "STRING",
                              "value": "str capitalize"
                            },
                            {
                              "type": "STRING",
                              "value": "str compress"
                            },
                            {
                              "type": "STRING",
                              "value": "str contains"
                            },
                            {
                              "type": "STRING",
                              "value": "str decompress"
                            },
                            {
                              "type": "STRING",
                              "value": "str dedent"
                            },
                            {
                              "type": "STRING",
                              "value": "str deunicode"
                            },
                            {
                              "type": "STRING",
                              "value": "str distance"
                            },
                            {
                              "type": "STRING",
                              "value": "str downcase"
                            },
                            {
                              "type": "STRING",
                              "value": "str ends-with"
                            },
                            {
                              "type": "STRING",
                              "value": "str expand"
                            },
                            {
                              "type": "STRING",
                              "value": "str indent"
                            },
                            {
                              "type": "STRING",
                              "value": "str index-of"
                            },
                            {
                              "type": "STRING",
                              "value": "str join"
                            },
                            {
                              "type": "STRING",
                              "value": "str kebab-case"
                            },
                            {
                              "type": "STRING",
                              "value": "str length"
                            },
                            {
                              "type": "STRING",
                              "value": "str pascal-case"
                            },
                            {
                              "type": "STRING",
                              "value": "str replace"
                            },
                            {
                              "type": "STRING",
                              "value": "str reverse"
                            },
                            {
                              "type": "STRING",
                              "value": "str screaming-snake-case"
                            },
                            {
                              "type": "STRING",
                              "value": "str similarity"
                            },
                            {
                              "type": "STRING",
                              "value": "str snake-case"
                            },
                            {
                              "type": "STRING",
                              "value": "str starts-with"
                            },
                            {
                              "type": "STRING",
                              "value": "str stats"
                            },
                            {
                              "type": "STRING",
                              "value": "str substring"
                            },
                            {
                              "type": "STRING",
                              "value": "str title-case"
                            },
                            {
                              "type": "STRING",
                              "value": "str trim"
                            },
                            {
                              "type": "STRING",
                              "value": "str upcase"
                            },
                            {
                              "type": "STRING",
                              "value": "str wrap"
                            },
                            {
                              "type": "STRING",
                              "value": "sys cpu"
                            },
                            {
                              "type": "STRING",
                              "value": "sys disks"
                            },
                            {
                              "type": "STRING",
                              "value": "sys host"
                            },
                            {
                              "type": "STRING",
                              "value": "sys mem"
                            },
                            {
                              "type": "STRING",
                              "value": "sys net"
                            },
                            {
                              "type": "STRING",
                              "value": "sys temp"
                            },
                            {
                              "type": "STRING",
                              "value": "sys users"
                            },
                            {
                              "type": "STRING",
                              "value": "take until"
                            },
                            {
                              "type": "STRING",
                              "value": "take while"
                            },
                            {
                              "type": "STRING",
                              "value": "term query"
                            },
                            {
                              "type": "STRING",
                              "value": "term size"
                            },
                            {
                              "type": "STRING",
                              "value": "to bz2"
                            },
                            {
                              "type": "STRING",
                              "value": "to csv"
                            },
                            {
                              "type": "STRING",
                              "value": "to gz"
                            },
                            {
                              "type": "STRING",
                              "value": "to html"
                            },
                            {
                              "type": "STRING",
                              "value": "to json"
                            },
                            {
                              "type": "STRING",
                              "value": "to md"
                            },
                            {
                              "type": "STRING",
                              "value": "to msgpack"
                            },
                            {
                              "type": "STRING",
                              "value": "to msgpackz"
                            },
                            {
                              "type": "STRING",
                              "value": "to nuon"
                            },
                            {
                              "type": "STRING",
                              "value": "to parquet"
                            },
                            {
                              "type": "STRING",
                              "value": "to plist"
                            },
                            {
                              "type": "STRING",
                              "value": "to png"
                            },
                            {
                              "type": "STRING",
                              "value": "to text"
                            },
                            {
                              "type": "STRING",
                              "value": "to toml"
                            },
                            {
                              "type": "STRING",
                              "value": "to tsv"
                            },
                            {
                              "type": "STRING",
                              "value": "to xml"
                            },
                            {
                              "type": "STRING",
                              "value": "to xz"
                            },
                            {
                              "type": "STRING",
                              "value": "to yaml"
                            },
                            {
                              "type": "STRING",
                              "value": "to zst"
                            },
                            {
                              "type": "STRING",
                              "value": "update cells"
                            },
                            {
                              "type": "STRING",
                              "value": "url build-query"
                            },
                            {
                              "type": "STRING",
                              "value": "url decode"
                            },
                            {
                              "type": "STRING",
                              "value": "url encode"
                            },
                            {
                              "type": "STRING",
                              "value": "url join"
                            },
                            {
                              "type": "STRING",
                              "value": "url parse"
                            },
                            {
                              "type": "STRING",
                              "value": "url split-query"
                            },
                            {
                              "type": "STRING",
                              "value": "view files"
                            },
                            {
                              "type": "STRING",
                              "value": "view ir"
                            },
                            {
                              "type": "STRING",
                              "value": "view source"
                            },
                            {
                              "type": "STRING",
                              "value": "view span"
                            }
                          ]
                        },
                        {
                          "type": "PATTERN",
                          "value": "[_a-zA-Z-]*"
                        }
                      ]
                    }
                  },
                  "named": true,
                  "value": "cmd_identifier"
                }
              }
            ]
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_separator"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_cmd_arg"
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "_cmd_arg": {
      "type": "CHOICE",
      "members": [
        {
          "type": "FIELD",
          "name": "redir",
          "content": {
            "type": "PREC_RIGHT",
            "value": 10,
            "content": {
              "type": "SYMBOL",
              "name": "redirection"
            }
          }
        },
        {
          "type": "FIELD",
          "name": "flag",
          "content": {
            "type": "PREC_RIGHT",
            "value": 9,
            "content": {
              "type": "SYMBOL",
              "name": "_flag"
            }
          }
        },
        {
          "type": "FIELD",
          "name": "arg",
          "content": {
            "type": "PREC_RIGHT",
            "value": 8,
            "content": {
              "type": "SYMBOL",
              "name": "_value"
            }
          }
        },
        {
          "type": "FIELD",
          "name": "arg",
          "content": {
            "type": "PREC_RIGHT",
            "value": 8,
            "content": {
              "type": "SYMBOL",
              "name": "val_range"
            }
          }
        },
        {
          "type": "FIELD",
          "name": "arg",
          "content": {
            "type": "PREC_RIGHT",
            "value": 7,
            "content": {
              "type": "SYMBOL",
              "name": "expr_parenthesized"
            }
          }
        },
        {
          "type": "FIELD",
          "name": "arg_spread",
          "content": {
            "type": "SYMBOL",
            "name": "_spread_listish"
          }
        },
        {
          "type": "FIELD",
          "name": "arg_str",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "SYMBOL",
              "name": "unquoted"
            },
            "named": true,
            "value": "val_string"
          }
        },
        {
          "type": "FIELD",
          "name": "arg_str",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "SYMBOL",
              "name": "_unquoted_with_expr"
            },
            "named": true,
            "value": "val_string"
          }
        }
      ]
    },
    "flag_value": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_value"
        },
        {
          "type": "SYMBOL",
          "name": "val_string"
        }
      ]
    },
    "redirection": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "err>"
            },
            {
              "type": "STRING",
              "value": "out>"
            },
            {
              "type": "STRING",
              "value": "e>"
            },
            {
              "type": "STRING",
              "value": "o>"
            },
            {
              "type": "STRING",
              "value": "err+out>"
            },
            {
              "type": "STRING",
              "value": "out+err>"
            },
            {
              "type": "STRING",
              "value": "o+e>"
            },
            {
              "type": "STRING",
              "value": "e+o>"
            },
            {
              "type": "STRING",
              "value": "err>>"
            },
            {
              "type": "STRING",
              "value": "out>>"
            },
            {
              "type": "STRING",
              "value": "e>>"
            },
            {
              "type": "STRING",
              "value": "o>>"
            },
            {
              "type": "STRING",
              "value": "err+out>>"
            },
            {
              "type": "STRING",
              "value": "out+err>>"
            },
            {
              "type": "STRING",
              "value": "o+e>>"
            },
            {
              "type": "STRING",
              "value": "e+o>>"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_space"
        },
        {
          "type": "FIELD",
          "name": "file_path",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "ALIAS",
                "content": {
                  "type": "SYMBOL",
                  "name": "_unquoted_naive"
                },
                "named": true,
                "value": "val_string"
              },
              {
                "type": "SYMBOL",
                "name": "_stringish"
              }
            ]
          }
        }
      ]
    },
    "_flag": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "short_flag"
        },
        {
          "type": "SYMBOL",
          "name": "long_flag"
        }
      ]
    },
    "_flags_parenthesized": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "_separator"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_flag"
        }
      ]
    },
    "_flag_value": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_value"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "unquoted"
          },
          "named": true,
          "value": "val_string"
        }
      ]
    },
    "short_flag": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "FIELD",
              "name": "name",
              "content": {
                "type": "SYMBOL",
                "name": "short_flag_identifier"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "STRING",
                    "value": "="
                  }
                },
                {
                  "type": "FIELD",
                  "name": "value",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_flag_value"
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "short_flag_identifier": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[\\p{XID_Continue}?@!%_-]+"
      }
    },
    "long_flag": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "--"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "FIELD",
              "name": "name",
              "content": {
                "type": "SYMBOL",
                "name": "long_flag_identifier"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "STRING",
                    "value": "="
                  }
                },
                {
                  "type": "FIELD",
                  "name": "value",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_flag_value"
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_unquoted_naive": {
      "type": "TOKEN",
      "content": {
        "type": "REPEAT1",
        "content": {
          "type": "PATTERN",
          "value": "[^\\s\\r\\n\\t\\|();{}]"
        }
      }
    },
    "unquoted": {
      "type": "PREC_LEFT",
      "value": -69,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "TOKEN",
            "content": {
              "type": "PREC",
              "value": -69,
              "content": {
                "type": "TOKEN",
                "content": {
                  "type": "TOKEN",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "PATTERN",
                        "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`'$-]"
                      },
                      {
                        "type": "REPEAT",
                        "content": {
                          "type": "PATTERN",
                          "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`']"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_val_range"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "_val_number_decimal"
                  },
                  {
                    "type": "PATTERN",
                    "value": "[iI][nN][fF]([iI][nN][iI][tT][yY])?"
                  },
                  {
                    "type": "PATTERN",
                    "value": "-[iI][nN][fF]([iI][nN][iI][tT][yY])?"
                  },
                  {
                    "type": "PATTERN",
                    "value": "[nN][aA][nN]"
                  }
                ]
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "PREC",
                  "value": -69,
                  "content": {
                    "type": "TOKEN",
                    "content": {
                      "type": "REPEAT1",
                      "content": {
                        "type": "PATTERN",
                        "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`']"
                      }
                    }
                  }
                }
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": ".."
                  },
                  {
                    "type": "STRING",
                    "value": "..="
                  },
                  {
                    "type": "STRING",
                    "value": "..<"
                  }
                ]
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "PREC",
                  "value": -69,
                  "content": {
                    "type": "TOKEN",
                    "content": {
                      "type": "REPEAT",
                      "content": {
                        "type": "PATTERN",
                        "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`']"
                      }
                    }
                  }
                }
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_unquoted_anonymous_prefix"
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "TOKEN",
                  "content": {
                    "type": "REPEAT1",
                    "content": {
                      "type": "PATTERN",
                      "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`']"
                    }
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "_unquoted_in_list": {
      "type": "PREC_LEFT",
      "value": -69,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "TOKEN",
            "content": {
              "type": "PREC",
              "value": -69,
              "content": {
                "type": "TOKEN",
                "content": {
                  "type": "TOKEN",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "PATTERN",
                        "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`'$,]"
                      },
                      {
                        "type": "REPEAT",
                        "content": {
                          "type": "PATTERN",
                          "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`',]"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_val_range"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "_val_number_decimal"
                  },
                  {
                    "type": "PATTERN",
                    "value": "[iI][nN][fF]([iI][nN][iI][tT][yY])?"
                  },
                  {
                    "type": "PATTERN",
                    "value": "-[iI][nN][fF]([iI][nN][iI][tT][yY])?"
                  },
                  {
                    "type": "PATTERN",
                    "value": "[nN][aA][nN]"
                  }
                ]
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "PREC",
                  "value": -69,
                  "content": {
                    "type": "TOKEN",
                    "content": {
                      "type": "REPEAT1",
                      "content": {
                        "type": "PATTERN",
                        "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`',]"
                      }
                    }
                  }
                }
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": ".."
                  },
                  {
                    "type": "STRING",
                    "value": "..="
                  },
                  {
                    "type": "STRING",
                    "value": "..<"
                  }
                ]
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "PREC",
                  "value": -69,
                  "content": {
                    "type": "TOKEN",
                    "content": {
                      "type": "REPEAT",
                      "content": {
                        "type": "PATTERN",
                        "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`',]"
                      }
                    }
                  }
                }
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_unquoted_anonymous_prefix"
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "TOKEN",
                  "content": {
                    "type": "REPEAT1",
                    "content": {
                      "type": "PATTERN",
                      "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`',]"
                    }
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "_unquoted_in_record": {
      "type": "PREC_LEFT",
      "value": -69,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "TOKEN",
            "content": {
              "type": "PREC",
              "value": -69,
              "content": {
                "type": "TOKEN",
                "content": {
                  "type": "TOKEN",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "PATTERN",
                        "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`'$:,]"
                      },
                      {
                        "type": "REPEAT",
                        "content": {
                          "type": "PATTERN",
                          "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`':,]"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_val_range"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "_val_number_decimal"
                  },
                  {
                    "type": "PATTERN",
                    "value": "[iI][nN][fF]([iI][nN][iI][tT][yY])?"
                  },
                  {
                    "type": "PATTERN",
                    "value": "-[iI][nN][fF]([iI][nN][iI][tT][yY])?"
                  },
                  {
                    "type": "PATTERN",
                    "value": "[nN][aA][nN]"
                  }
                ]
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "PREC",
                  "value": -69,
                  "content": {
                    "type": "TOKEN",
                    "content": {
                      "type": "REPEAT1",
                      "content": {
                        "type": "PATTERN",
                        "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`':,]"
                      }
                    }
                  }
                }
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": ".."
                  },
                  {
                    "type": "STRING",
                    "value": "..="
                  },
                  {
                    "type": "STRING",
                    "value": "..<"
                  }
                ]
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "PREC",
                  "value": -69,
                  "content": {
                    "type": "TOKEN",
                    "content": {
                      "type": "REPEAT",
                      "content": {
                        "type": "PATTERN",
                        "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`':,]"
                      }
                    }
                  }
                }
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_unquoted_anonymous_prefix"
              },
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "TOKEN",
                  "content": {
                    "type": "REPEAT1",
                    "content": {
                      "type": "PATTERN",
                      "value": "[^\\s\\r\\n\\t\\|();\\[\\]{}\"`':,]"
                    }
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "_unquoted_with_expr": {
      "type": "PREC",
      "value": -1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_unquoted_anonymous_prefix"
              },
              {
                "type": "SYMBOL",
                "name": "_val_number_decimal"
              },
              {
                "type": "SYMBOL",
                "name": "_val_range_with_end"
              },
              {
                "type": "ALIAS",
                "content": {
                  "type": "SYMBOL",
                  "name": "unquoted"
                },
                "named": false,
                "value": "_head"
              }
            ]
          },
          {
            "type": "ALIAS",
            "content": {
              "type": "SYMBOL",
              "name": "_expr_parenthesized_immediate"
            },
            "named": true,
            "value": "expr_parenthesized"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "REPEAT",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "TOKEN",
                        "content": {
                          "type": "REPEAT",
                          "content": {
                            "type": "PATTERN",
                            "value": "[^\\s\\r\\n\\t\\|();]"
                          }
                        }
                      }
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_expr_parenthesized_immediate"
                      },
                      "named": true,
                      "value": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "IMMEDIATE_TOKEN",
            "content": {
              "type": "TOKEN",
              "content": {
                "type": "REPEAT",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();]"
                }
              }
            }
          }
        ]
      }
    },
    "_unquoted_in_list_with_expr": {
      "type": "PREC",
      "value": -1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_unquoted_anonymous_prefix"
              },
              {
                "type": "SYMBOL",
                "name": "_val_number_decimal"
              },
              {
                "type": "SYMBOL",
                "name": "_val_range_with_end"
              },
              {
                "type": "ALIAS",
                "content": {
                  "type": "SYMBOL",
                  "name": "_unquoted_in_list"
                },
                "named": false,
                "value": "_head"
              }
            ]
          },
          {
            "type": "ALIAS",
            "content": {
              "type": "SYMBOL",
              "name": "_expr_parenthesized_immediate"
            },
            "named": true,
            "value": "expr_parenthesized"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "REPEAT",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "TOKEN",
                        "content": {
                          "type": "REPEAT",
                          "content": {
                            "type": "PATTERN",
                            "value": "[^\\s\\r\\n\\t\\|();\\[\\],]"
                          }
                        }
                      }
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_expr_parenthesized_immediate"
                      },
                      "named": true,
                      "value": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "IMMEDIATE_TOKEN",
            "content": {
              "type": "TOKEN",
              "content": {
                "type": "REPEAT",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();\\[\\],]"
                }
              }
            }
          }
        ]
      }
    },
    "_unquoted_in_record_with_expr": {
      "type": "PREC",
      "value": -1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_unquoted_anonymous_prefix"
              },
              {
                "type": "SYMBOL",
                "name": "_val_number_decimal"
              },
              {
                "type": "SYMBOL",
                "name": "_val_range_with_end"
              },
              {
                "type": "ALIAS",
                "content": {
                  "type": "SYMBOL",
                  "name": "_unquoted_in_record"
                },
                "named": false,
                "value": "_head"
              }
            ]
          },
          {
            "type": "ALIAS",
            "content": {
              "type": "SYMBOL",
              "name": "_expr_parenthesized_immediate"
            },
            "named": true,
            "value": "expr_parenthesized"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "REPEAT",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "IMMEDIATE_TOKEN",
                      "content": {
                        "type": "TOKEN",
                        "content": {
                          "type": "REPEAT",
                          "content": {
                            "type": "PATTERN",
                            "value": "[^\\s\\r\\n\\t\\|();{}:,]"
                          }
                        }
                      }
                    },
                    {
                      "type": "ALIAS",
                      "content": {
                        "type": "SYMBOL",
                        "name": "_expr_parenthesized_immediate"
                      },
                      "named": true,
                      "value": "expr_parenthesized"
                    }
                  ]
                }
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "IMMEDIATE_TOKEN",
            "content": {
              "type": "TOKEN",
              "content": {
                "type": "REPEAT",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\\s\\r\\n\\t\\|();{}:,]"
                }
              }
            }
          }
        ]
      }
    },
    "_unquoted_anonymous_prefix": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "err>"
        },
        {
          "type": "STRING",
          "value": "out>"
        },
        {
          "type": "STRING",
          "value": "e>"
        },
        {
          "type": "STRING",
          "value": "o>"
        },
        {
          "type": "STRING",
          "value": "err+out>"
        },
        {
          "type": "STRING",
          "value": "out+err>"
        },
        {
          "type": "STRING",
          "value": "o+e>"
        },
        {
          "type": "STRING",
          "value": "e+o>"
        },
        {
          "type": "STRING",
          "value": "err>>"
        },
        {
          "type": "STRING",
          "value": "out>>"
        },
        {
          "type": "STRING",
          "value": "e>>"
        },
        {
          "type": "STRING",
          "value": "o>>"
        },
        {
          "type": "STRING",
          "value": "err+out>>"
        },
        {
          "type": "STRING",
          "value": "out+err>>"
        },
        {
          "type": "STRING",
          "value": "o+e>>"
        },
        {
          "type": "STRING",
          "value": "e+o>>"
        },
        {
          "type": "STRING",
          "value": "null"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "val_bool"
          },
          "named": false,
          "value": "_prefix"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "val_date"
          },
          "named": false,
          "value": "_prefix"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_val_number_decimal"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "ALIAS",
                  "content": {
                    "type": "SYMBOL",
                    "name": "duration_unit"
                  },
                  "named": false,
                  "value": "_unit"
                },
                {
                  "type": "ALIAS",
                  "content": {
                    "type": "SYMBOL",
                    "name": "filesize_unit"
                  },
                  "named": false,
                  "value": "_unit"
                }
              ]
            }
          ]
        }
      ]
    },
    "comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#"
        },
        {
          "type": "PATTERN",
          "value": ".*"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "[ \\t]"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [
    [
      "_binary_predicate_parenthesized"
    ],
    [
      "_block_body",
      "record_body",
      "val_closure"
    ],
    [
      "_block_body",
      "shebang"
    ],
    [
      "_block_body",
      "val_closure"
    ],
    [
      "_expression_parenthesized",
      "_expr_binary_expression_parenthesized"
    ],
    [
      "_match_pattern_list",
      "val_list"
    ],
    [
      "_match_pattern_record",
      "val_record"
    ],
    [
      "_match_pattern_record_variable",
      "_value"
    ],
    [
      "_match_pattern_value",
      "_value"
    ],
    [
      "_parenthesized_body"
    ],
    [
      "block",
      "val_closure"
    ],
    [
      "block",
      "val_record"
    ],
    [
      "command",
      "record_entry"
    ],
    [
      "ctrl_if_parenthesized"
    ],
    [
      "ctrl_try_parenthesized"
    ],
    [
      "expr_binary_parenthesized"
    ],
    [
      "list_body",
      "val_table"
    ],
    [
      "parameter",
      "param_type",
      "param_value"
    ],
    [
      "pipeline"
    ],
    [
      "pipeline_parenthesized"
    ]
  ],
  "precedences": [],
  "externals": [
    {
      "type": "SYMBOL",
      "name": "raw_string_begin"
    },
    {
      "type": "SYMBOL",
      "name": "raw_string_content"
    },
    {
      "type": "SYMBOL",
      "name": "raw_string_end"
    }
  ],
  "inline": [
    "_do_expression",
    "_flag",
    "_flag_value",
    "_item_expression",
    "_match_expression",
    "_separator",
    "_spread_listish",
    "_spread_recordish",
    "_stringish",
    "_terminator"
  ],
  "supertypes": []
}
